ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SPIS.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SPIS_initVar
  19              		.bss
  20              		.type	SPIS_initVar, %object
  21              		.size	SPIS_initVar, 1
  22              	SPIS_initVar:
  23 0000 00       		.space	1
  24              		.comm	SPIS_swStatusTx,1,1
  25              		.comm	SPIS_swStatusRx,1,1
  26              		.section	.text.SPIS_Init,"ax",%progbits
  27              		.align	2
  28              		.global	SPIS_Init
  29              		.thumb
  30              		.thumb_func
  31              		.type	SPIS_Init, %function
  32              	SPIS_Init:
  33              	.LFB0:
  34              		.file 1 ".\\Generated_Source\\PSoC5\\SPIS.c"
   1:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/SPIS.c **** * File Name: SPIS.c
   3:.\Generated_Source\PSoC5/SPIS.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/SPIS.c **** *
   5:.\Generated_Source\PSoC5/SPIS.c **** * Description:
   6:.\Generated_Source\PSoC5/SPIS.c **** *  This file provides all API functionality of the SPI Slave component.
   7:.\Generated_Source\PSoC5/SPIS.c **** *
   8:.\Generated_Source\PSoC5/SPIS.c **** * Note:
   9:.\Generated_Source\PSoC5/SPIS.c **** *  None.
  10:.\Generated_Source\PSoC5/SPIS.c **** *
  11:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/SPIS.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/SPIS.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/SPIS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/SPIS.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/SPIS.c **** 
  18:.\Generated_Source\PSoC5/SPIS.c **** #include "SPIS_PVT.h"
  19:.\Generated_Source\PSoC5/SPIS.c **** 
  20:.\Generated_Source\PSoC5/SPIS.c **** #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
  21:.\Generated_Source\PSoC5/SPIS.c **** 
  22:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBuffer[SPIS_TX_BUFFER_SIZE];
  23:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferRead;
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 2


  24:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferWrite;
  25:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferFull;
  26:.\Generated_Source\PSoC5/SPIS.c **** 
  27:.\Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED*/
  28:.\Generated_Source\PSoC5/SPIS.c **** 
  29:.\Generated_Source\PSoC5/SPIS.c **** #if (SPIS_RX_SOFTWARE_BUF_ENABLED)
  30:.\Generated_Source\PSoC5/SPIS.c **** 
  31:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBuffer[SPIS_RX_BUFFER_SIZE];
  32:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferRead;
  33:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferWrite;
  34:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferFull;
  35:.\Generated_Source\PSoC5/SPIS.c **** 
  36:.\Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
  37:.\Generated_Source\PSoC5/SPIS.c **** 
  38:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_initVar = 0u;
  39:.\Generated_Source\PSoC5/SPIS.c **** 
  40:.\Generated_Source\PSoC5/SPIS.c **** volatile uint8 SPIS_swStatusTx;
  41:.\Generated_Source\PSoC5/SPIS.c **** volatile uint8 SPIS_swStatusRx;
  42:.\Generated_Source\PSoC5/SPIS.c **** 
  43:.\Generated_Source\PSoC5/SPIS.c **** 
  44:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
  45:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Init
  46:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
  47:.\Generated_Source\PSoC5/SPIS.c **** *
  48:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
  49:.\Generated_Source\PSoC5/SPIS.c **** *  Inits/Restores default SPIS configuration provided with customizer.
  50:.\Generated_Source\PSoC5/SPIS.c **** *
  51:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
  52:.\Generated_Source\PSoC5/SPIS.c **** *  None.
  53:.\Generated_Source\PSoC5/SPIS.c **** *
  54:.\Generated_Source\PSoC5/SPIS.c **** * Return:
  55:.\Generated_Source\PSoC5/SPIS.c **** *  None.
  56:.\Generated_Source\PSoC5/SPIS.c **** *
  57:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
  58:.\Generated_Source\PSoC5/SPIS.c **** *  When this function is called it initializes all of the necessary parameters
  59:.\Generated_Source\PSoC5/SPIS.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  60:.\Generated_Source\PSoC5/SPIS.c **** *  interrupt service routine, configuring the bit-counter parameters and
  61:.\Generated_Source\PSoC5/SPIS.c **** *  clearing the FIFO and Status Register.
  62:.\Generated_Source\PSoC5/SPIS.c **** *
  63:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
  64:.\Generated_Source\PSoC5/SPIS.c **** *  No.
  65:.\Generated_Source\PSoC5/SPIS.c **** *
  66:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
  67:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Init(void) 
  68:.\Generated_Source\PSoC5/SPIS.c **** {
  35              		.loc 1 68 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  69:.\Generated_Source\PSoC5/SPIS.c ****     /*Initialize the Bit counter */
  70:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_COUNTER_PERIOD_REG = SPIS_BITCTR_INIT;
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 3


  45              		.loc 1 70 0
  46 0004 074B     		ldr	r3, .L2
  47 0006 0722     		movs	r2, #7
  48 0008 1A70     		strb	r2, [r3]
  71:.\Generated_Source\PSoC5/SPIS.c **** 
  72:.\Generated_Source\PSoC5/SPIS.c ****     /* ISR initialization */
  73:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
  74:.\Generated_Source\PSoC5/SPIS.c **** 
  75:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
  76:.\Generated_Source\PSoC5/SPIS.c **** 
  77:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the ISR to point to the SPIS_isr Interrupt. */
  78:.\Generated_Source\PSoC5/SPIS.c ****         (void)CyIntSetVector(SPIS_TX_ISR_NUMBER, &SPIS_TX_ISR);
  79:.\Generated_Source\PSoC5/SPIS.c **** 
  80:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the priority. */
  81:.\Generated_Source\PSoC5/SPIS.c ****         CyIntSetPriority(SPIS_TX_ISR_NUMBER, SPIS_TX_ISR_PRIORITY);
  82:.\Generated_Source\PSoC5/SPIS.c **** 
  83:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
  84:.\Generated_Source\PSoC5/SPIS.c **** 
  85:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
  86:.\Generated_Source\PSoC5/SPIS.c **** 
  87:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
  88:.\Generated_Source\PSoC5/SPIS.c **** 
  89:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the ISR to point to the SPIS_isr Interrupt. */
  90:.\Generated_Source\PSoC5/SPIS.c ****         (void)CyIntSetVector(SPIS_RX_ISR_NUMBER, &SPIS_RX_ISR);
  91:.\Generated_Source\PSoC5/SPIS.c **** 
  92:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the priority. */
  93:.\Generated_Source\PSoC5/SPIS.c ****         CyIntSetPriority(SPIS_RX_ISR_NUMBER, SPIS_RX_ISR_PRIORITY);
  94:.\Generated_Source\PSoC5/SPIS.c **** 
  95:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
  96:.\Generated_Source\PSoC5/SPIS.c **** 
  97:.\Generated_Source\PSoC5/SPIS.c ****     /* Clear any stray data from the RX and TX FIFO */
  98:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_ClearFIFO();
  49              		.loc 1 98 0
  50 000a FFF7FEFF 		bl	SPIS_ClearFIFO
  99:.\Generated_Source\PSoC5/SPIS.c **** 
 100:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 101:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferFull = 0u;
 102:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead = 0u;
 103:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
 104:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 105:.\Generated_Source\PSoC5/SPIS.c **** 
 106:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 107:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferFull = 0u;
 108:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferRead = 0u;
 109:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferWrite = 0u;
 110:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 111:.\Generated_Source\PSoC5/SPIS.c **** 
 112:.\Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadTxStatus(); /* Clear any pending status bits */
  51              		.loc 1 112 0
  52 000e FFF7FEFF 		bl	SPIS_ReadTxStatus
 113:.\Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadRxStatus(); /* Clear any pending status bits */
  53              		.loc 1 113 0
  54 0012 FFF7FEFF 		bl	SPIS_ReadRxStatus
 114:.\Generated_Source\PSoC5/SPIS.c **** 
 115:.\Generated_Source\PSoC5/SPIS.c **** 
 116:.\Generated_Source\PSoC5/SPIS.c ****     /* Configure the Initial interrupt mask */
 117:.\Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 4


 118:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG  = (SPIS_TX_INIT_INTERRUPTS_MASK &
 119:.\Generated_Source\PSoC5/SPIS.c ****                                                 (uint8)~SPIS_STS_TX_FIFO_NOT_FULL);
 120:.\Generated_Source\PSoC5/SPIS.c ****     #else /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 121:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG  = SPIS_TX_INIT_INTERRUPTS_MASK;
  55              		.loc 1 121 0
  56 0016 044B     		ldr	r3, .L2+4
  57 0018 0222     		movs	r2, #2
  58 001a 1A70     		strb	r2, [r3]
 122:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 123:.\Generated_Source\PSoC5/SPIS.c **** 
 124:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = SPIS_RX_INIT_INTERRUPTS_MASK;
  59              		.loc 1 124 0
  60 001c 034B     		ldr	r3, .L2+8
  61 001e 0822     		movs	r2, #8
  62 0020 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/SPIS.c **** }
  63              		.loc 1 125 0
  64 0022 80BD     		pop	{r7, pc}
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 0024 89650040 		.word	1073767817
  69 0028 88640040 		.word	1073767560
  70 002c 88650040 		.word	1073767816
  71              		.cfi_endproc
  72              	.LFE0:
  73              		.size	SPIS_Init, .-SPIS_Init
  74              		.section	.text.SPIS_Enable,"ax",%progbits
  75              		.align	2
  76              		.global	SPIS_Enable
  77              		.thumb
  78              		.thumb_func
  79              		.type	SPIS_Enable, %function
  80              	SPIS_Enable:
  81              	.LFB1:
 126:.\Generated_Source\PSoC5/SPIS.c **** 
 127:.\Generated_Source\PSoC5/SPIS.c **** 
 128:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 129:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Enable
 130:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 131:.\Generated_Source\PSoC5/SPIS.c **** *
 132:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 133:.\Generated_Source\PSoC5/SPIS.c **** *  Enable SPIS component.
 134:.\Generated_Source\PSoC5/SPIS.c **** *
 135:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 136:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 137:.\Generated_Source\PSoC5/SPIS.c **** *
 138:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 139:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 140:.\Generated_Source\PSoC5/SPIS.c **** *
 141:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Enable(void) 
 143:.\Generated_Source\PSoC5/SPIS.c **** {
  82              		.loc 1 143 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 5


  86 0000 80B5     		push	{r7, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 82B0     		sub	sp, sp, #8
  91              		.cfi_def_cfa_offset 16
  92 0004 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
 144:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 145:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
  94              		.loc 1 145 0
  95 0006 FFF7FEFF 		bl	CyEnterCriticalSection
  96 000a 0346     		mov	r3, r0
  97 000c FB71     		strb	r3, [r7, #7]
 146:.\Generated_Source\PSoC5/SPIS.c **** 
 147:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_COUNTER_CONTROL_REG |= SPIS_CNTR_ENABLE;
  98              		.loc 1 147 0
  99 000e 0F4A     		ldr	r2, .L5
 100 0010 0E4B     		ldr	r3, .L5
 101 0012 1B78     		ldrb	r3, [r3]
 102 0014 DBB2     		uxtb	r3, r3
 103 0016 43F02003 		orr	r3, r3, #32
 104 001a DBB2     		uxtb	r3, r3
 105 001c 1370     		strb	r3, [r2]
 148:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_ACTL_REG |= SPIS_INT_ENABLE;
 106              		.loc 1 148 0
 107 001e 0C4A     		ldr	r2, .L5+4
 108 0020 0B4B     		ldr	r3, .L5+4
 109 0022 1B78     		ldrb	r3, [r3]
 110 0024 DBB2     		uxtb	r3, r3
 111 0026 43F01003 		orr	r3, r3, #16
 112 002a DBB2     		uxtb	r3, r3
 113 002c 1370     		strb	r3, [r2]
 149:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_ACTL_REG |= SPIS_INT_ENABLE;
 114              		.loc 1 149 0
 115 002e 094A     		ldr	r2, .L5+8
 116 0030 084B     		ldr	r3, .L5+8
 117 0032 1B78     		ldrb	r3, [r3]
 118 0034 DBB2     		uxtb	r3, r3
 119 0036 43F01003 		orr	r3, r3, #16
 120 003a DBB2     		uxtb	r3, r3
 121 003c 1370     		strb	r3, [r2]
 150:.\Generated_Source\PSoC5/SPIS.c **** 
 151:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 122              		.loc 1 151 0
 123 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 124 0040 1846     		mov	r0, r3
 125 0042 FFF7FEFF 		bl	CyExitCriticalSection
 152:.\Generated_Source\PSoC5/SPIS.c **** 
 153:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 154:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 155:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 156:.\Generated_Source\PSoC5/SPIS.c **** 
 157:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 158:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 159:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 160:.\Generated_Source\PSoC5/SPIS.c **** }
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 6


 126              		.loc 1 160 0
 127 0046 0837     		adds	r7, r7, #8
 128              		.cfi_def_cfa_offset 8
 129 0048 BD46     		mov	sp, r7
 130              		.cfi_def_cfa_register 13
 131              		@ sp needed
 132 004a 80BD     		pop	{r7, pc}
 133              	.L6:
 134              		.align	2
 135              	.L5:
 136 004c 99650040 		.word	1073767833
 137 0050 98640040 		.word	1073767576
 138 0054 98650040 		.word	1073767832
 139              		.cfi_endproc
 140              	.LFE1:
 141              		.size	SPIS_Enable, .-SPIS_Enable
 142              		.section	.text.SPIS_Start,"ax",%progbits
 143              		.align	2
 144              		.global	SPIS_Start
 145              		.thumb
 146              		.thumb_func
 147              		.type	SPIS_Start, %function
 148              	SPIS_Start:
 149              	.LFB2:
 161:.\Generated_Source\PSoC5/SPIS.c **** 
 162:.\Generated_Source\PSoC5/SPIS.c **** 
 163:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Start
 165:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/SPIS.c **** *
 167:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 168:.\Generated_Source\PSoC5/SPIS.c **** *  Initialize and Enable the SPI Slave component.
 169:.\Generated_Source\PSoC5/SPIS.c **** *
 170:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 171:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 172:.\Generated_Source\PSoC5/SPIS.c **** *
 173:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 174:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 175:.\Generated_Source\PSoC5/SPIS.c **** *
 176:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 177:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_initVar - used to check initial configuration, modified on
 178:.\Generated_Source\PSoC5/SPIS.c **** *  first function call.
 179:.\Generated_Source\PSoC5/SPIS.c **** *
 180:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 181:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the clock input to enable operation.
 182:.\Generated_Source\PSoC5/SPIS.c **** *
 183:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 184:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 185:.\Generated_Source\PSoC5/SPIS.c **** *
 186:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 187:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Start(void) 
 188:.\Generated_Source\PSoC5/SPIS.c **** {
 150              		.loc 1 188 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 7


 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 189:.\Generated_Source\PSoC5/SPIS.c ****     if(SPIS_initVar == 0u)
 160              		.loc 1 189 0
 161 0004 054B     		ldr	r3, .L9
 162 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 163 0008 002B     		cmp	r3, #0
 164 000a 04D1     		bne	.L8
 190:.\Generated_Source\PSoC5/SPIS.c ****     {
 191:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_Init();
 165              		.loc 1 191 0
 166 000c FFF7FEFF 		bl	SPIS_Init
 192:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_initVar = 1u;
 167              		.loc 1 192 0
 168 0010 024B     		ldr	r3, .L9
 169 0012 0122     		movs	r2, #1
 170 0014 1A70     		strb	r2, [r3]
 171              	.L8:
 193:.\Generated_Source\PSoC5/SPIS.c ****     }
 194:.\Generated_Source\PSoC5/SPIS.c **** 
 195:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_Enable();
 172              		.loc 1 195 0
 173 0016 FFF7FEFF 		bl	SPIS_Enable
 196:.\Generated_Source\PSoC5/SPIS.c **** }
 174              		.loc 1 196 0
 175 001a 80BD     		pop	{r7, pc}
 176              	.L10:
 177              		.align	2
 178              	.L9:
 179 001c 00000000 		.word	SPIS_initVar
 180              		.cfi_endproc
 181              	.LFE2:
 182              		.size	SPIS_Start, .-SPIS_Start
 183              		.section	.text.SPIS_Stop,"ax",%progbits
 184              		.align	2
 185              		.global	SPIS_Stop
 186              		.thumb
 187              		.thumb_func
 188              		.type	SPIS_Stop, %function
 189              	SPIS_Stop:
 190              	.LFB3:
 197:.\Generated_Source\PSoC5/SPIS.c **** 
 198:.\Generated_Source\PSoC5/SPIS.c **** 
 199:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 200:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Stop
 201:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 202:.\Generated_Source\PSoC5/SPIS.c **** *
 203:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 204:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the SPI Slave component.
 205:.\Generated_Source\PSoC5/SPIS.c **** *
 206:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 207:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 208:.\Generated_Source\PSoC5/SPIS.c **** *
 209:.\Generated_Source\PSoC5/SPIS.c **** * Return:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 8


 210:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 211:.\Generated_Source\PSoC5/SPIS.c **** *
 212:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 213:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal interrupt if one is used.
 214:.\Generated_Source\PSoC5/SPIS.c **** *
 215:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 216:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Stop(void) 
 217:.\Generated_Source\PSoC5/SPIS.c **** {
 191              		.loc 1 217 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 8
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 82B0     		sub	sp, sp, #8
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 218:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 219:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 203              		.loc 1 219 0
 204 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 205 000a 0346     		mov	r3, r0
 206 000c FB71     		strb	r3, [r7, #7]
 220:.\Generated_Source\PSoC5/SPIS.c **** 
 221:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_ACTL_REG &= (uint8)~SPIS_INT_ENABLE;
 207              		.loc 1 221 0
 208 000e 0B4A     		ldr	r2, .L12
 209 0010 0A4B     		ldr	r3, .L12
 210 0012 1B78     		ldrb	r3, [r3]
 211 0014 DBB2     		uxtb	r3, r3
 212 0016 23F01003 		bic	r3, r3, #16
 213 001a DBB2     		uxtb	r3, r3
 214 001c 1370     		strb	r3, [r2]
 222:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_ACTL_REG &= (uint8)~SPIS_INT_ENABLE;
 215              		.loc 1 222 0
 216 001e 084A     		ldr	r2, .L12+4
 217 0020 074B     		ldr	r3, .L12+4
 218 0022 1B78     		ldrb	r3, [r3]
 219 0024 DBB2     		uxtb	r3, r3
 220 0026 23F01003 		bic	r3, r3, #16
 221 002a DBB2     		uxtb	r3, r3
 222 002c 1370     		strb	r3, [r2]
 223:.\Generated_Source\PSoC5/SPIS.c **** 
 224:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 223              		.loc 1 224 0
 224 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 225 0030 1846     		mov	r0, r3
 226 0032 FFF7FEFF 		bl	CyExitCriticalSection
 225:.\Generated_Source\PSoC5/SPIS.c **** 
 226:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 227:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 228:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 229:.\Generated_Source\PSoC5/SPIS.c **** 
 230:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 9


 231:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 232:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 233:.\Generated_Source\PSoC5/SPIS.c **** }
 227              		.loc 1 233 0
 228 0036 0837     		adds	r7, r7, #8
 229              		.cfi_def_cfa_offset 8
 230 0038 BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 003a 80BD     		pop	{r7, pc}
 234              	.L13:
 235              		.align	2
 236              	.L12:
 237 003c 98640040 		.word	1073767576
 238 0040 98650040 		.word	1073767832
 239              		.cfi_endproc
 240              	.LFE3:
 241              		.size	SPIS_Stop, .-SPIS_Stop
 242              		.section	.text.SPIS_EnableTxInt,"ax",%progbits
 243              		.align	2
 244              		.global	SPIS_EnableTxInt
 245              		.thumb
 246              		.thumb_func
 247              		.type	SPIS_EnableTxInt, %function
 248              	SPIS_EnableTxInt:
 249              	.LFB4:
 234:.\Generated_Source\PSoC5/SPIS.c **** 
 235:.\Generated_Source\PSoC5/SPIS.c **** 
 236:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableTxInt
 238:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 239:.\Generated_Source\PSoC5/SPIS.c **** *
 240:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 241:.\Generated_Source\PSoC5/SPIS.c **** *  Enable internal Tx interrupt generation.
 242:.\Generated_Source\PSoC5/SPIS.c **** *
 243:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 244:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 245:.\Generated_Source\PSoC5/SPIS.c **** *
 246:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 247:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 248:.\Generated_Source\PSoC5/SPIS.c **** *
 249:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 250:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 251:.\Generated_Source\PSoC5/SPIS.c **** *
 252:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 253:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableTxInt(void) 
 254:.\Generated_Source\PSoC5/SPIS.c **** {
 250              		.loc 1 254 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255 0000 80B4     		push	{r7}
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 7, -4
 258 0002 00AF     		add	r7, sp, #0
 259              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 10


 255:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 256:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 257:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 258:.\Generated_Source\PSoC5/SPIS.c **** }
 260              		.loc 1 258 0
 261 0004 BD46     		mov	sp, r7
 262              		.cfi_def_cfa_register 13
 263              		@ sp needed
 264 0006 5DF8047B 		ldr	r7, [sp], #4
 265              		.cfi_restore 7
 266              		.cfi_def_cfa_offset 0
 267 000a 7047     		bx	lr
 268              		.cfi_endproc
 269              	.LFE4:
 270              		.size	SPIS_EnableTxInt, .-SPIS_EnableTxInt
 271              		.section	.text.SPIS_EnableRxInt,"ax",%progbits
 272              		.align	2
 273              		.global	SPIS_EnableRxInt
 274              		.thumb
 275              		.thumb_func
 276              		.type	SPIS_EnableRxInt, %function
 277              	SPIS_EnableRxInt:
 278              	.LFB5:
 259:.\Generated_Source\PSoC5/SPIS.c **** 
 260:.\Generated_Source\PSoC5/SPIS.c **** 
 261:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 262:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableRxInt
 263:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 264:.\Generated_Source\PSoC5/SPIS.c **** *
 265:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 266:.\Generated_Source\PSoC5/SPIS.c **** *  Enable internal Rx interrupt generation.
 267:.\Generated_Source\PSoC5/SPIS.c **** *
 268:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 269:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 270:.\Generated_Source\PSoC5/SPIS.c **** *
 271:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 272:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 273:.\Generated_Source\PSoC5/SPIS.c **** *
 274:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 275:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 276:.\Generated_Source\PSoC5/SPIS.c **** *
 277:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 278:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableRxInt(void) 
 279:.\Generated_Source\PSoC5/SPIS.c **** {
 279              		.loc 1 279 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284 0000 80B4     		push	{r7}
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 7, -4
 287 0002 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 280:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 281:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 282:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 11


 283:.\Generated_Source\PSoC5/SPIS.c **** }
 289              		.loc 1 283 0
 290 0004 BD46     		mov	sp, r7
 291              		.cfi_def_cfa_register 13
 292              		@ sp needed
 293 0006 5DF8047B 		ldr	r7, [sp], #4
 294              		.cfi_restore 7
 295              		.cfi_def_cfa_offset 0
 296 000a 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE5:
 299              		.size	SPIS_EnableRxInt, .-SPIS_EnableRxInt
 300              		.section	.text.SPIS_DisableTxInt,"ax",%progbits
 301              		.align	2
 302              		.global	SPIS_DisableTxInt
 303              		.thumb
 304              		.thumb_func
 305              		.type	SPIS_DisableTxInt, %function
 306              	SPIS_DisableTxInt:
 307              	.LFB6:
 284:.\Generated_Source\PSoC5/SPIS.c **** 
 285:.\Generated_Source\PSoC5/SPIS.c **** 
 286:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 287:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableTxInt
 288:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 289:.\Generated_Source\PSoC5/SPIS.c **** *
 290:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 291:.\Generated_Source\PSoC5/SPIS.c **** *  Disable internal Tx interrupt generation.
 292:.\Generated_Source\PSoC5/SPIS.c **** *
 293:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 294:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 295:.\Generated_Source\PSoC5/SPIS.c **** *
 296:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 297:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 298:.\Generated_Source\PSoC5/SPIS.c **** *
 299:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 300:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 301:.\Generated_Source\PSoC5/SPIS.c **** *
 302:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 303:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableTxInt(void) 
 304:.\Generated_Source\PSoC5/SPIS.c **** {
 308              		.loc 1 304 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313 0000 80B4     		push	{r7}
 314              		.cfi_def_cfa_offset 4
 315              		.cfi_offset 7, -4
 316 0002 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 305:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 306:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 307:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 308:.\Generated_Source\PSoC5/SPIS.c **** }
 318              		.loc 1 308 0
 319 0004 BD46     		mov	sp, r7
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 12


 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 0006 5DF8047B 		ldr	r7, [sp], #4
 323              		.cfi_restore 7
 324              		.cfi_def_cfa_offset 0
 325 000a 7047     		bx	lr
 326              		.cfi_endproc
 327              	.LFE6:
 328              		.size	SPIS_DisableTxInt, .-SPIS_DisableTxInt
 329              		.section	.text.SPIS_DisableRxInt,"ax",%progbits
 330              		.align	2
 331              		.global	SPIS_DisableRxInt
 332              		.thumb
 333              		.thumb_func
 334              		.type	SPIS_DisableRxInt, %function
 335              	SPIS_DisableRxInt:
 336              	.LFB7:
 309:.\Generated_Source\PSoC5/SPIS.c **** 
 310:.\Generated_Source\PSoC5/SPIS.c **** 
 311:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 312:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableRxInt
 313:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 314:.\Generated_Source\PSoC5/SPIS.c **** *
 315:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 316:.\Generated_Source\PSoC5/SPIS.c **** *  Disable internal Rx interrupt generation.
 317:.\Generated_Source\PSoC5/SPIS.c **** *
 318:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 319:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 320:.\Generated_Source\PSoC5/SPIS.c **** *
 321:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 322:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 323:.\Generated_Source\PSoC5/SPIS.c **** *
 324:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 325:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 326:.\Generated_Source\PSoC5/SPIS.c **** *
 327:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 328:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableRxInt(void) 
 329:.\Generated_Source\PSoC5/SPIS.c **** {
 337              		.loc 1 329 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 342 0000 80B4     		push	{r7}
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
 345 0002 00AF     		add	r7, sp, #0
 346              		.cfi_def_cfa_register 7
 330:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 331:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 332:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 333:.\Generated_Source\PSoC5/SPIS.c **** }
 347              		.loc 1 333 0
 348 0004 BD46     		mov	sp, r7
 349              		.cfi_def_cfa_register 13
 350              		@ sp needed
 351 0006 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 13


 352              		.cfi_restore 7
 353              		.cfi_def_cfa_offset 0
 354 000a 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE7:
 357              		.size	SPIS_DisableRxInt, .-SPIS_DisableRxInt
 358              		.section	.text.SPIS_SetTxInterruptMode,"ax",%progbits
 359              		.align	2
 360              		.global	SPIS_SetTxInterruptMode
 361              		.thumb
 362              		.thumb_func
 363              		.type	SPIS_SetTxInterruptMode, %function
 364              	SPIS_SetTxInterruptMode:
 365              	.LFB8:
 334:.\Generated_Source\PSoC5/SPIS.c **** 
 335:.\Generated_Source\PSoC5/SPIS.c **** 
 336:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 337:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetTxInterruptMode
 338:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 339:.\Generated_Source\PSoC5/SPIS.c **** *
 340:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 341:.\Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
 342:.\Generated_Source\PSoC5/SPIS.c **** *
 343:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 344:.\Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 345:.\Generated_Source\PSoC5/SPIS.c **** *  header file).
 346:.\Generated_Source\PSoC5/SPIS.c **** *
 347:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 348:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 349:.\Generated_Source\PSoC5/SPIS.c **** *
 350:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 351:.\Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 352:.\Generated_Source\PSoC5/SPIS.c **** *
 353:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_SetTxInterruptMode(uint8 intSrc) 
 355:.\Generated_Source\PSoC5/SPIS.c **** {
 366              		.loc 1 355 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 8
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0000 80B4     		push	{r7}
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
 374 0002 83B0     		sub	sp, sp, #12
 375              		.cfi_def_cfa_offset 16
 376 0004 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 378 0006 0346     		mov	r3, r0
 379 0008 FB71     		strb	r3, [r7, #7]
 356:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_MASK_REG  = intSrc;
 380              		.loc 1 356 0
 381 000a 044A     		ldr	r2, .L19
 382 000c FB79     		ldrb	r3, [r7, #7]
 383 000e 1370     		strb	r3, [r2]
 357:.\Generated_Source\PSoC5/SPIS.c **** }
 384              		.loc 1 357 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 14


 385 0010 0C37     		adds	r7, r7, #12
 386              		.cfi_def_cfa_offset 4
 387 0012 BD46     		mov	sp, r7
 388              		.cfi_def_cfa_register 13
 389              		@ sp needed
 390 0014 5DF8047B 		ldr	r7, [sp], #4
 391              		.cfi_restore 7
 392              		.cfi_def_cfa_offset 0
 393 0018 7047     		bx	lr
 394              	.L20:
 395 001a 00BF     		.align	2
 396              	.L19:
 397 001c 88640040 		.word	1073767560
 398              		.cfi_endproc
 399              	.LFE8:
 400              		.size	SPIS_SetTxInterruptMode, .-SPIS_SetTxInterruptMode
 401              		.section	.text.SPIS_SetRxInterruptMode,"ax",%progbits
 402              		.align	2
 403              		.global	SPIS_SetRxInterruptMode
 404              		.thumb
 405              		.thumb_func
 406              		.type	SPIS_SetRxInterruptMode, %function
 407              	SPIS_SetRxInterruptMode:
 408              	.LFB9:
 358:.\Generated_Source\PSoC5/SPIS.c **** 
 359:.\Generated_Source\PSoC5/SPIS.c **** 
 360:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 361:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetRxInterruptMode
 362:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 363:.\Generated_Source\PSoC5/SPIS.c **** *
 364:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 365:.\Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
 366:.\Generated_Source\PSoC5/SPIS.c **** *
 367:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 368:.\Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 369:.\Generated_Source\PSoC5/SPIS.c **** *  header file).
 370:.\Generated_Source\PSoC5/SPIS.c **** *
 371:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 372:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 373:.\Generated_Source\PSoC5/SPIS.c **** *
 374:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 375:.\Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 376:.\Generated_Source\PSoC5/SPIS.c **** *
 377:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 378:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_SetRxInterruptMode(uint8 intSrc) 
 379:.\Generated_Source\PSoC5/SPIS.c **** {
 409              		.loc 1 379 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 8
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 414 0000 80B4     		push	{r7}
 415              		.cfi_def_cfa_offset 4
 416              		.cfi_offset 7, -4
 417 0002 83B0     		sub	sp, sp, #12
 418              		.cfi_def_cfa_offset 16
 419 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 15


 420              		.cfi_def_cfa_register 7
 421 0006 0346     		mov	r3, r0
 422 0008 FB71     		strb	r3, [r7, #7]
 380:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = intSrc;
 423              		.loc 1 380 0
 424 000a 044A     		ldr	r2, .L22
 425 000c FB79     		ldrb	r3, [r7, #7]
 426 000e 1370     		strb	r3, [r2]
 381:.\Generated_Source\PSoC5/SPIS.c **** }
 427              		.loc 1 381 0
 428 0010 0C37     		adds	r7, r7, #12
 429              		.cfi_def_cfa_offset 4
 430 0012 BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 0014 5DF8047B 		ldr	r7, [sp], #4
 434              		.cfi_restore 7
 435              		.cfi_def_cfa_offset 0
 436 0018 7047     		bx	lr
 437              	.L23:
 438 001a 00BF     		.align	2
 439              	.L22:
 440 001c 88650040 		.word	1073767816
 441              		.cfi_endproc
 442              	.LFE9:
 443              		.size	SPIS_SetRxInterruptMode, .-SPIS_SetRxInterruptMode
 444              		.section	.text.SPIS_ReadTxStatus,"ax",%progbits
 445              		.align	2
 446              		.global	SPIS_ReadTxStatus
 447              		.thumb
 448              		.thumb_func
 449              		.type	SPIS_ReadTxStatus, %function
 450              	SPIS_ReadTxStatus:
 451              	.LFB10:
 382:.\Generated_Source\PSoC5/SPIS.c **** 
 383:.\Generated_Source\PSoC5/SPIS.c **** 
 384:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 385:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadTxStatus
 386:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 387:.\Generated_Source\PSoC5/SPIS.c **** *
 388:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 389:.\Generated_Source\PSoC5/SPIS.c **** *  Read the Tx status register for the component.
 390:.\Generated_Source\PSoC5/SPIS.c **** *
 391:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 392:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 393:.\Generated_Source\PSoC5/SPIS.c **** *
 394:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 395:.\Generated_Source\PSoC5/SPIS.c **** *  Contents of the Tx status register.
 396:.\Generated_Source\PSoC5/SPIS.c **** *
 397:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 398:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatusTx - used to store in software status register,
 399:.\Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
 400:.\Generated_Source\PSoC5/SPIS.c **** *
 401:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 402:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the Tx status register for error
 403:.\Generated_Source\PSoC5/SPIS.c **** *  detection and flow control.
 404:.\Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 16


 405:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 406:.\Generated_Source\PSoC5/SPIS.c **** *  Clear Tx status register of the component.
 407:.\Generated_Source\PSoC5/SPIS.c **** *
 408:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 409:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 410:.\Generated_Source\PSoC5/SPIS.c **** *
 411:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadTxStatus(void) 
 413:.\Generated_Source\PSoC5/SPIS.c **** {
 452              		.loc 1 413 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457 0000 80B4     		push	{r7}
 458              		.cfi_def_cfa_offset 4
 459              		.cfi_offset 7, -4
 460 0002 83B0     		sub	sp, sp, #12
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 414:.\Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
 415:.\Generated_Source\PSoC5/SPIS.c **** 
 416:.\Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
 417:.\Generated_Source\PSoC5/SPIS.c **** 
 418:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 419:.\Generated_Source\PSoC5/SPIS.c **** 
 420:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx);
 421:.\Generated_Source\PSoC5/SPIS.c **** 
 422:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = 0u;
 423:.\Generated_Source\PSoC5/SPIS.c **** 
 424:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
 425:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 426:.\Generated_Source\PSoC5/SPIS.c **** 
 427:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 428:.\Generated_Source\PSoC5/SPIS.c **** 
 429:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_TX_STATUS_REG;
 464              		.loc 1 429 0
 465 0006 054B     		ldr	r3, .L26
 466 0008 1B78     		ldrb	r3, [r3]
 467 000a FB71     		strb	r3, [r7, #7]
 430:.\Generated_Source\PSoC5/SPIS.c **** 
 431:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 432:.\Generated_Source\PSoC5/SPIS.c **** 
 433:.\Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 468              		.loc 1 433 0
 469 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 434:.\Generated_Source\PSoC5/SPIS.c **** }
 470              		.loc 1 434 0
 471 000e 1846     		mov	r0, r3
 472 0010 0C37     		adds	r7, r7, #12
 473              		.cfi_def_cfa_offset 4
 474 0012 BD46     		mov	sp, r7
 475              		.cfi_def_cfa_register 13
 476              		@ sp needed
 477 0014 5DF8047B 		ldr	r7, [sp], #4
 478              		.cfi_restore 7
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 17


 479              		.cfi_def_cfa_offset 0
 480 0018 7047     		bx	lr
 481              	.L27:
 482 001a 00BF     		.align	2
 483              	.L26:
 484 001c 68640040 		.word	1073767528
 485              		.cfi_endproc
 486              	.LFE10:
 487              		.size	SPIS_ReadTxStatus, .-SPIS_ReadTxStatus
 488              		.section	.text.SPIS_ReadRxStatus,"ax",%progbits
 489              		.align	2
 490              		.global	SPIS_ReadRxStatus
 491              		.thumb
 492              		.thumb_func
 493              		.type	SPIS_ReadRxStatus, %function
 494              	SPIS_ReadRxStatus:
 495              	.LFB11:
 435:.\Generated_Source\PSoC5/SPIS.c **** 
 436:.\Generated_Source\PSoC5/SPIS.c **** 
 437:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 438:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadRxStatus
 439:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 440:.\Generated_Source\PSoC5/SPIS.c **** *
 441:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 442:.\Generated_Source\PSoC5/SPIS.c **** *  Read the Rx status register for the component.
 443:.\Generated_Source\PSoC5/SPIS.c **** *
 444:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 445:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 446:.\Generated_Source\PSoC5/SPIS.c **** *
 447:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 448:.\Generated_Source\PSoC5/SPIS.c **** *  Contents of the Rx status register.
 449:.\Generated_Source\PSoC5/SPIS.c **** *
 450:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 451:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatusRx - used to store in software Rx status register,
 452:.\Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
 453:.\Generated_Source\PSoC5/SPIS.c **** *
 454:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 455:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the Rx status register for error
 456:.\Generated_Source\PSoC5/SPIS.c **** *  detection and flow control.
 457:.\Generated_Source\PSoC5/SPIS.c **** *
 458:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 459:.\Generated_Source\PSoC5/SPIS.c **** *  Clear Rx status register of the component.
 460:.\Generated_Source\PSoC5/SPIS.c **** *
 461:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 462:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 463:.\Generated_Source\PSoC5/SPIS.c **** *
 464:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadRxStatus(void) 
 466:.\Generated_Source\PSoC5/SPIS.c **** {
 496              		.loc 1 466 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 8
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501 0000 80B4     		push	{r7}
 502              		.cfi_def_cfa_offset 4
 503              		.cfi_offset 7, -4
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 18


 504 0002 83B0     		sub	sp, sp, #12
 505              		.cfi_def_cfa_offset 16
 506 0004 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 467:.\Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
 468:.\Generated_Source\PSoC5/SPIS.c **** 
 469:.\Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_RX_SOFTWARE_BUF_ENABLED)
 470:.\Generated_Source\PSoC5/SPIS.c **** 
 471:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 472:.\Generated_Source\PSoC5/SPIS.c **** 
 473:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_RX(SPIS_swStatusRx);
 474:.\Generated_Source\PSoC5/SPIS.c **** 
 475:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusRx = 0u;
 476:.\Generated_Source\PSoC5/SPIS.c **** 
 477:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
 478:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 479:.\Generated_Source\PSoC5/SPIS.c **** 
 480:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED */
 481:.\Generated_Source\PSoC5/SPIS.c **** 
 482:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_RX_STATUS_REG;
 508              		.loc 1 482 0
 509 0006 054B     		ldr	r3, .L30
 510 0008 1B78     		ldrb	r3, [r3]
 511 000a FB71     		strb	r3, [r7, #7]
 483:.\Generated_Source\PSoC5/SPIS.c **** 
 484:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 485:.\Generated_Source\PSoC5/SPIS.c **** 
 486:.\Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 512              		.loc 1 486 0
 513 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 487:.\Generated_Source\PSoC5/SPIS.c **** }
 514              		.loc 1 487 0
 515 000e 1846     		mov	r0, r3
 516 0010 0C37     		adds	r7, r7, #12
 517              		.cfi_def_cfa_offset 4
 518 0012 BD46     		mov	sp, r7
 519              		.cfi_def_cfa_register 13
 520              		@ sp needed
 521 0014 5DF8047B 		ldr	r7, [sp], #4
 522              		.cfi_restore 7
 523              		.cfi_def_cfa_offset 0
 524 0018 7047     		bx	lr
 525              	.L31:
 526 001a 00BF     		.align	2
 527              	.L30:
 528 001c 68650040 		.word	1073767784
 529              		.cfi_endproc
 530              	.LFE11:
 531              		.size	SPIS_ReadRxStatus, .-SPIS_ReadRxStatus
 532              		.section	.text.SPIS_WriteTxData,"ax",%progbits
 533              		.align	2
 534              		.global	SPIS_WriteTxData
 535              		.thumb
 536              		.thumb_func
 537              		.type	SPIS_WriteTxData, %function
 538              	SPIS_WriteTxData:
 539              	.LFB12:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 19


 488:.\Generated_Source\PSoC5/SPIS.c **** 
 489:.\Generated_Source\PSoC5/SPIS.c **** 
 490:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 491:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_WriteTxData
 492:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 493:.\Generated_Source\PSoC5/SPIS.c **** *
 494:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 495:.\Generated_Source\PSoC5/SPIS.c **** *  Write a byte of data to be sent across the SPI.
 496:.\Generated_Source\PSoC5/SPIS.c **** *
 497:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 498:.\Generated_Source\PSoC5/SPIS.c **** *  txDataByte: The data value to send across the SPI.
 499:.\Generated_Source\PSoC5/SPIS.c **** *
 500:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 501:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 502:.\Generated_Source\PSoC5/SPIS.c **** *
 503:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 504:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 505:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer, modified every function
 506:.\Generated_Source\PSoC5/SPIS.c **** *  call if TX Software Buffer is used.
 507:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 508:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer.
 509:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBuffer[SPIS_TX_BUFFER_SIZE] - used to store
 510:.\Generated_Source\PSoC5/SPIS.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 511:.\Generated_Source\PSoC5/SPIS.c **** *
 512:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 513:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to transmit any byte of data in a single transfer.
 514:.\Generated_Source\PSoC5/SPIS.c **** *
 515:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 516:.\Generated_Source\PSoC5/SPIS.c **** *  If this function is called again before the previous byte is finished then
 517:.\Generated_Source\PSoC5/SPIS.c **** *  the next byte will be appended to the transfer with no time between
 518:.\Generated_Source\PSoC5/SPIS.c **** *  the byte transfers. Clear Tx status register of the component.
 519:.\Generated_Source\PSoC5/SPIS.c **** *
 520:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 521:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 522:.\Generated_Source\PSoC5/SPIS.c **** *
 523:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 524:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_WriteTxData(uint8 txData) 
 525:.\Generated_Source\PSoC5/SPIS.c **** {
 540              		.loc 1 525 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 8
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 545 0000 80B4     		push	{r7}
 546              		.cfi_def_cfa_offset 4
 547              		.cfi_offset 7, -4
 548 0002 83B0     		sub	sp, sp, #12
 549              		.cfi_def_cfa_offset 16
 550 0004 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 552 0006 0346     		mov	r3, r0
 553 0008 FB71     		strb	r3, [r7, #7]
 526:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 527:.\Generated_Source\PSoC5/SPIS.c **** 
 528:.\Generated_Source\PSoC5/SPIS.c ****         uint8 tempStatus;
 529:.\Generated_Source\PSoC5/SPIS.c ****         uint8 tmpTxBufferRead;
 530:.\Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 20


 531:.\Generated_Source\PSoC5/SPIS.c ****         /* Block if buffer is full, so we don't overwrite. */
 532:.\Generated_Source\PSoC5/SPIS.c ****         do
 533:.\Generated_Source\PSoC5/SPIS.c ****         {
 534:.\Generated_Source\PSoC5/SPIS.c ****             tmpTxBufferRead = SPIS_txBufferRead;
 535:.\Generated_Source\PSoC5/SPIS.c ****             if (0u == tmpTxBufferRead)
 536:.\Generated_Source\PSoC5/SPIS.c ****             {
 537:.\Generated_Source\PSoC5/SPIS.c ****                 tmpTxBufferRead = SPIS_TX_BUFFER_SIZE - 1u;
 538:.\Generated_Source\PSoC5/SPIS.c ****             }
 539:.\Generated_Source\PSoC5/SPIS.c ****             else
 540:.\Generated_Source\PSoC5/SPIS.c ****             {
 541:.\Generated_Source\PSoC5/SPIS.c ****                 tmpTxBufferRead--;
 542:.\Generated_Source\PSoC5/SPIS.c ****             }
 543:.\Generated_Source\PSoC5/SPIS.c **** 
 544:.\Generated_Source\PSoC5/SPIS.c ****         }
 545:.\Generated_Source\PSoC5/SPIS.c ****         while(tmpTxBufferRead == SPIS_txBufferWrite);
 546:.\Generated_Source\PSoC5/SPIS.c **** 
 547:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 548:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 549:.\Generated_Source\PSoC5/SPIS.c **** 
 550:.\Generated_Source\PSoC5/SPIS.c ****         tempStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx);
 551:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = tempStatus;
 552:.\Generated_Source\PSoC5/SPIS.c **** 
 553:.\Generated_Source\PSoC5/SPIS.c ****         if((SPIS_txBufferRead == SPIS_txBufferWrite) &&
 554:.\Generated_Source\PSoC5/SPIS.c ****             (0u != (SPIS_swStatusTx & SPIS_STS_TX_FIFO_NOT_FULL)))
 555:.\Generated_Source\PSoC5/SPIS.c ****         {
 556:.\Generated_Source\PSoC5/SPIS.c ****             /* Put data element into the TX FIFO */
 557:.\Generated_Source\PSoC5/SPIS.c ****             CY_SET_REG8(SPIS_TXDATA_PTR, txData);
 558:.\Generated_Source\PSoC5/SPIS.c ****         }
 559:.\Generated_Source\PSoC5/SPIS.c ****         else
 560:.\Generated_Source\PSoC5/SPIS.c ****         {
 561:.\Generated_Source\PSoC5/SPIS.c ****             /* Put data element into the software buffer */
 562:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_txBufferWrite++;
 563:.\Generated_Source\PSoC5/SPIS.c ****             if(SPIS_txBufferWrite >= SPIS_TX_BUFFER_SIZE)
 564:.\Generated_Source\PSoC5/SPIS.c ****             {
 565:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferWrite = 0u;
 566:.\Generated_Source\PSoC5/SPIS.c ****             }
 567:.\Generated_Source\PSoC5/SPIS.c **** 
 568:.\Generated_Source\PSoC5/SPIS.c ****             if(SPIS_txBufferWrite == SPIS_txBufferRead)
 569:.\Generated_Source\PSoC5/SPIS.c ****             {
 570:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferRead++;
 571:.\Generated_Source\PSoC5/SPIS.c ****                 if(SPIS_txBufferRead >= SPIS_RX_BUFFER_SIZE)
 572:.\Generated_Source\PSoC5/SPIS.c ****                 {
 573:.\Generated_Source\PSoC5/SPIS.c ****                     SPIS_txBufferRead = 0u;
 574:.\Generated_Source\PSoC5/SPIS.c ****                 }
 575:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferFull = 1u;
 576:.\Generated_Source\PSoC5/SPIS.c ****             }
 577:.\Generated_Source\PSoC5/SPIS.c **** 
 578:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_txBuffer[SPIS_txBufferWrite] = txData;
 579:.\Generated_Source\PSoC5/SPIS.c **** 
 580:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_TX_STATUS_MASK_REG |= SPIS_STS_TX_FIFO_NOT_FULL;
 581:.\Generated_Source\PSoC5/SPIS.c ****         }
 582:.\Generated_Source\PSoC5/SPIS.c **** 
 583:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 584:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 585:.\Generated_Source\PSoC5/SPIS.c **** 
 586:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 587:.\Generated_Source\PSoC5/SPIS.c ****         /* Wait until TX FIFO has a place */
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 21


 588:.\Generated_Source\PSoC5/SPIS.c ****         while(0u == (SPIS_TX_STATUS_REG & SPIS_STS_TX_FIFO_NOT_FULL))
 554              		.loc 1 588 0
 555 000a 00BF     		nop
 556              	.L33:
 557              		.loc 1 588 0 is_stmt 0 discriminator 1
 558 000c 074B     		ldr	r3, .L34
 559 000e 1B78     		ldrb	r3, [r3]
 560 0010 DBB2     		uxtb	r3, r3
 561 0012 03F00203 		and	r3, r3, #2
 562 0016 002B     		cmp	r3, #0
 563 0018 F8D0     		beq	.L33
 589:.\Generated_Source\PSoC5/SPIS.c ****         {
 590:.\Generated_Source\PSoC5/SPIS.c ****         }
 591:.\Generated_Source\PSoC5/SPIS.c **** 
 592:.\Generated_Source\PSoC5/SPIS.c ****         /* Put data element into the TX FIFO */
 593:.\Generated_Source\PSoC5/SPIS.c ****         CY_SET_REG8(SPIS_TXDATA_PTR, txData);
 564              		.loc 1 593 0 is_stmt 1
 565 001a 054A     		ldr	r2, .L34+4
 566 001c FB79     		ldrb	r3, [r7, #7]
 567 001e 1370     		strb	r3, [r2]
 594:.\Generated_Source\PSoC5/SPIS.c ****         
 595:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 596:.\Generated_Source\PSoC5/SPIS.c **** }
 568              		.loc 1 596 0
 569 0020 0C37     		adds	r7, r7, #12
 570              		.cfi_def_cfa_offset 4
 571 0022 BD46     		mov	sp, r7
 572              		.cfi_def_cfa_register 13
 573              		@ sp needed
 574 0024 5DF8047B 		ldr	r7, [sp], #4
 575              		.cfi_restore 7
 576              		.cfi_def_cfa_offset 0
 577 0028 7047     		bx	lr
 578              	.L35:
 579 002a 00BF     		.align	2
 580              	.L34:
 581 002c 68640040 		.word	1073767528
 582 0030 49650040 		.word	1073767753
 583              		.cfi_endproc
 584              	.LFE12:
 585              		.size	SPIS_WriteTxData, .-SPIS_WriteTxData
 586              		.section	.text.SPIS_WriteTxDataZero,"ax",%progbits
 587              		.align	2
 588              		.global	SPIS_WriteTxDataZero
 589              		.thumb
 590              		.thumb_func
 591              		.type	SPIS_WriteTxDataZero, %function
 592              	SPIS_WriteTxDataZero:
 593              	.LFB13:
 597:.\Generated_Source\PSoC5/SPIS.c **** 
 598:.\Generated_Source\PSoC5/SPIS.c **** #if(SPIS_MODE_USE_ZERO != 0u)
 599:.\Generated_Source\PSoC5/SPIS.c **** 
 600:.\Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 601:.\Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_WriteTxDataZero
 602:.\Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
 603:.\Generated_Source\PSoC5/SPIS.c ****     *
 604:.\Generated_Source\PSoC5/SPIS.c ****     * Summary:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 22


 605:.\Generated_Source\PSoC5/SPIS.c ****     *  Write a byte zero of data to be sent across the SPI. This must be used in
 606:.\Generated_Source\PSoC5/SPIS.c ****     *  Mode 00 and 01 if the FIFO is empty and data is not being sent.
 607:.\Generated_Source\PSoC5/SPIS.c ****     *
 608:.\Generated_Source\PSoC5/SPIS.c ****     * Parameters:
 609:.\Generated_Source\PSoC5/SPIS.c ****     *  txDataByte: The data value to send across the SPI.
 610:.\Generated_Source\PSoC5/SPIS.c ****     *
 611:.\Generated_Source\PSoC5/SPIS.c ****     * Return:
 612:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
 613:.\Generated_Source\PSoC5/SPIS.c ****     *
 614:.\Generated_Source\PSoC5/SPIS.c ****     * Theory:
 615:.\Generated_Source\PSoC5/SPIS.c ****     *  Allows the user to transmit any byte of data in a single transfer. Clear
 616:.\Generated_Source\PSoC5/SPIS.c ****     *  status register of the component.
 617:.\Generated_Source\PSoC5/SPIS.c ****     *
 618:.\Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
 619:.\Generated_Source\PSoC5/SPIS.c ****     void SPIS_WriteTxDataZero(uint8 txDataByte)
 620:.\Generated_Source\PSoC5/SPIS.c ****                                         
 621:.\Generated_Source\PSoC5/SPIS.c ****     {
 594              		.loc 1 621 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 8
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              		.cfi_def_cfa_offset 4
 601              		.cfi_offset 7, -4
 602 0002 83B0     		sub	sp, sp, #12
 603              		.cfi_def_cfa_offset 16
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 0346     		mov	r3, r0
 607 0008 FB71     		strb	r3, [r7, #7]
 622:.\Generated_Source\PSoC5/SPIS.c ****         CY_SET_REG8(SPIS_TXDATA_ZERO_PTR, txDataByte);
 608              		.loc 1 622 0
 609 000a 044A     		ldr	r2, .L37
 610 000c FB79     		ldrb	r3, [r7, #7]
 611 000e 1370     		strb	r3, [r2]
 623:.\Generated_Source\PSoC5/SPIS.c ****     }
 612              		.loc 1 623 0
 613 0010 0C37     		adds	r7, r7, #12
 614              		.cfi_def_cfa_offset 4
 615 0012 BD46     		mov	sp, r7
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed
 618 0014 5DF8047B 		ldr	r7, [sp], #4
 619              		.cfi_restore 7
 620              		.cfi_def_cfa_offset 0
 621 0018 7047     		bx	lr
 622              	.L38:
 623 001a 00BF     		.align	2
 624              	.L37:
 625 001c 09650040 		.word	1073767689
 626              		.cfi_endproc
 627              	.LFE13:
 628              		.size	SPIS_WriteTxDataZero, .-SPIS_WriteTxDataZero
 629              		.section	.text.SPIS_ReadRxData,"ax",%progbits
 630              		.align	2
 631              		.global	SPIS_ReadRxData
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 23


 632              		.thumb
 633              		.thumb_func
 634              		.type	SPIS_ReadRxData, %function
 635              	SPIS_ReadRxData:
 636              	.LFB14:
 624:.\Generated_Source\PSoC5/SPIS.c **** 
 625:.\Generated_Source\PSoC5/SPIS.c **** #endif /* (SPIS_MODE_USE_ZERO != 0u) */
 626:.\Generated_Source\PSoC5/SPIS.c **** 
 627:.\Generated_Source\PSoC5/SPIS.c **** 
 628:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 629:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadRxData
 630:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 631:.\Generated_Source\PSoC5/SPIS.c **** *
 632:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 633:.\Generated_Source\PSoC5/SPIS.c **** *  Read the next byte of data received across the SPI.
 634:.\Generated_Source\PSoC5/SPIS.c **** *
 635:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 636:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 637:.\Generated_Source\PSoC5/SPIS.c **** *
 638:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 639:.\Generated_Source\PSoC5/SPIS.c **** *  The next byte of data read from the FIFO.
 640:.\Generated_Source\PSoC5/SPIS.c **** *
 641:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 642:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 643:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer.
 644:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 645:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer, modified every function
 646:.\Generated_Source\PSoC5/SPIS.c **** *  call if RX Software Buffer is used.
 647:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBuffer[SPIS_RX_BUFFER_SIZE] - used to store
 648:.\Generated_Source\PSoC5/SPIS.c **** *  received data.
 649:.\Generated_Source\PSoC5/SPIS.c **** *
 650:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 651:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to read a byte of data received.
 652:.\Generated_Source\PSoC5/SPIS.c **** *
 653:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 654:.\Generated_Source\PSoC5/SPIS.c **** *  Will return invalid data if the FIFO is empty.  User should poll for FIFO
 655:.\Generated_Source\PSoC5/SPIS.c **** *  empty status before calling Read function.
 656:.\Generated_Source\PSoC5/SPIS.c **** *
 657:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 658:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 659:.\Generated_Source\PSoC5/SPIS.c **** *
 660:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadRxData(void) 
 662:.\Generated_Source\PSoC5/SPIS.c **** {
 637              		.loc 1 662 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 8
 640              		@ frame_needed = 1, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 642 0000 80B4     		push	{r7}
 643              		.cfi_def_cfa_offset 4
 644              		.cfi_offset 7, -4
 645 0002 83B0     		sub	sp, sp, #12
 646              		.cfi_def_cfa_offset 16
 647 0004 00AF     		add	r7, sp, #0
 648              		.cfi_def_cfa_register 7
 663:.\Generated_Source\PSoC5/SPIS.c ****     uint8 rxData;
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 24


 664:.\Generated_Source\PSoC5/SPIS.c **** 
 665:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 666:.\Generated_Source\PSoC5/SPIS.c **** 
 667:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 668:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 669:.\Generated_Source\PSoC5/SPIS.c **** 
 670:.\Generated_Source\PSoC5/SPIS.c ****         if(SPIS_rxBufferRead != SPIS_rxBufferWrite)
 671:.\Generated_Source\PSoC5/SPIS.c ****         {
 672:.\Generated_Source\PSoC5/SPIS.c ****             if(SPIS_rxBufferFull == 0u)
 673:.\Generated_Source\PSoC5/SPIS.c ****             {
 674:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_rxBufferRead++;
 675:.\Generated_Source\PSoC5/SPIS.c ****                 if(SPIS_rxBufferRead >= SPIS_RX_BUFFER_SIZE)
 676:.\Generated_Source\PSoC5/SPIS.c ****                 {
 677:.\Generated_Source\PSoC5/SPIS.c ****                     SPIS_rxBufferRead = 0u;
 678:.\Generated_Source\PSoC5/SPIS.c ****                 }
 679:.\Generated_Source\PSoC5/SPIS.c ****             }
 680:.\Generated_Source\PSoC5/SPIS.c ****             else
 681:.\Generated_Source\PSoC5/SPIS.c ****             {
 682:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_rxBufferFull = 0u;
 683:.\Generated_Source\PSoC5/SPIS.c ****             }
 684:.\Generated_Source\PSoC5/SPIS.c ****         }
 685:.\Generated_Source\PSoC5/SPIS.c **** 
 686:.\Generated_Source\PSoC5/SPIS.c ****         rxData = SPIS_rxBuffer[SPIS_rxBufferRead];
 687:.\Generated_Source\PSoC5/SPIS.c **** 
 688:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 689:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 690:.\Generated_Source\PSoC5/SPIS.c **** 
 691:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED */
 692:.\Generated_Source\PSoC5/SPIS.c **** 
 693:.\Generated_Source\PSoC5/SPIS.c ****         rxData = CY_GET_REG8(SPIS_RXDATA_PTR);
 649              		.loc 1 693 0
 650 0006 054B     		ldr	r3, .L41
 651 0008 1B78     		ldrb	r3, [r3]
 652 000a FB71     		strb	r3, [r7, #7]
 694:.\Generated_Source\PSoC5/SPIS.c **** 
 695:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 696:.\Generated_Source\PSoC5/SPIS.c **** 
 697:.\Generated_Source\PSoC5/SPIS.c ****     return (rxData);
 653              		.loc 1 697 0
 654 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:.\Generated_Source\PSoC5/SPIS.c **** 
 699:.\Generated_Source\PSoC5/SPIS.c **** }
 655              		.loc 1 699 0
 656 000e 1846     		mov	r0, r3
 657 0010 0C37     		adds	r7, r7, #12
 658              		.cfi_def_cfa_offset 4
 659 0012 BD46     		mov	sp, r7
 660              		.cfi_def_cfa_register 13
 661              		@ sp needed
 662 0014 5DF8047B 		ldr	r7, [sp], #4
 663              		.cfi_restore 7
 664              		.cfi_def_cfa_offset 0
 665 0018 7047     		bx	lr
 666              	.L42:
 667 001a 00BF     		.align	2
 668              	.L41:
 669 001c 59650040 		.word	1073767769
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 25


 670              		.cfi_endproc
 671              	.LFE14:
 672              		.size	SPIS_ReadRxData, .-SPIS_ReadRxData
 673              		.section	.text.SPIS_GetRxBufferSize,"ax",%progbits
 674              		.align	2
 675              		.global	SPIS_GetRxBufferSize
 676              		.thumb
 677              		.thumb_func
 678              		.type	SPIS_GetRxBufferSize, %function
 679              	SPIS_GetRxBufferSize:
 680              	.LFB15:
 700:.\Generated_Source\PSoC5/SPIS.c **** 
 701:.\Generated_Source\PSoC5/SPIS.c **** 
 702:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 703:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_GetRxBufferSize
 704:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 705:.\Generated_Source\PSoC5/SPIS.c **** *
 706:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 707:.\Generated_Source\PSoC5/SPIS.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 708:.\Generated_Source\PSoC5/SPIS.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 709:.\Generated_Source\PSoC5/SPIS.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 710:.\Generated_Source\PSoC5/SPIS.c **** *
 711:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 712:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 713:.\Generated_Source\PSoC5/SPIS.c **** *
 714:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 715:.\Generated_Source\PSoC5/SPIS.c **** *  Integer count of the number of bytes/words in the RX buffer.
 716:.\Generated_Source\PSoC5/SPIS.c **** *
 717:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 718:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 719:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer.
 720:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 721:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer.
 722:.\Generated_Source\PSoC5/SPIS.c **** *
 723:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 724:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to find out how full the RX Buffer is.
 725:.\Generated_Source\PSoC5/SPIS.c **** *
 726:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 727:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_GetRxBufferSize(void) 
 728:.\Generated_Source\PSoC5/SPIS.c **** {
 681              		.loc 1 728 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 8
 684              		@ frame_needed = 1, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686 0000 80B4     		push	{r7}
 687              		.cfi_def_cfa_offset 4
 688              		.cfi_offset 7, -4
 689 0002 83B0     		sub	sp, sp, #12
 690              		.cfi_def_cfa_offset 16
 691 0004 00AF     		add	r7, sp, #0
 692              		.cfi_def_cfa_register 7
 729:.\Generated_Source\PSoC5/SPIS.c ****     uint8 size;
 730:.\Generated_Source\PSoC5/SPIS.c **** 
 731:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 732:.\Generated_Source\PSoC5/SPIS.c **** 
 733:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 26


 734:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 735:.\Generated_Source\PSoC5/SPIS.c **** 
 736:.\Generated_Source\PSoC5/SPIS.c ****         if(SPIS_rxBufferRead == SPIS_rxBufferWrite)
 737:.\Generated_Source\PSoC5/SPIS.c ****         {
 738:.\Generated_Source\PSoC5/SPIS.c ****             size = 0u; /* No data in RX buffer */
 739:.\Generated_Source\PSoC5/SPIS.c ****         }
 740:.\Generated_Source\PSoC5/SPIS.c ****         else if(SPIS_rxBufferRead < SPIS_rxBufferWrite)
 741:.\Generated_Source\PSoC5/SPIS.c ****         {
 742:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_rxBufferWrite - SPIS_rxBufferRead);
 743:.\Generated_Source\PSoC5/SPIS.c ****         }
 744:.\Generated_Source\PSoC5/SPIS.c ****         else
 745:.\Generated_Source\PSoC5/SPIS.c ****         {
 746:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_RX_BUFFER_SIZE - SPIS_rxBufferRead) + SPIS_rxBufferWrite;
 747:.\Generated_Source\PSoC5/SPIS.c ****         }
 748:.\Generated_Source\PSoC5/SPIS.c **** 
 749:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable interrupt. */
 750:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 751:.\Generated_Source\PSoC5/SPIS.c **** 
 752:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED*/
 753:.\Generated_Source\PSoC5/SPIS.c **** 
 754:.\Generated_Source\PSoC5/SPIS.c ****         /* We can only know if there is data in the fifo. */
 755:.\Generated_Source\PSoC5/SPIS.c ****         size = ((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u) ? 1u : 0u;
 693              		.loc 1 755 0
 694 0006 094B     		ldr	r3, .L47
 695 0008 1B78     		ldrb	r3, [r3]
 696 000a DBB2     		uxtb	r3, r3
 697 000c 03F00803 		and	r3, r3, #8
 698 0010 002B     		cmp	r3, #0
 699 0012 01D0     		beq	.L44
 700              		.loc 1 755 0 is_stmt 0 discriminator 1
 701 0014 0123     		movs	r3, #1
 702 0016 00E0     		b	.L45
 703              	.L44:
 704              		.loc 1 755 0 discriminator 2
 705 0018 0023     		movs	r3, #0
 706              	.L45:
 707              		.loc 1 755 0 discriminator 4
 708 001a FB71     		strb	r3, [r7, #7]
 756:.\Generated_Source\PSoC5/SPIS.c **** 
 757:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 758:.\Generated_Source\PSoC5/SPIS.c **** 
 759:.\Generated_Source\PSoC5/SPIS.c ****     return (size);
 709              		.loc 1 759 0 is_stmt 1 discriminator 4
 710 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 760:.\Generated_Source\PSoC5/SPIS.c **** }
 711              		.loc 1 760 0 discriminator 4
 712 001e 1846     		mov	r0, r3
 713 0020 0C37     		adds	r7, r7, #12
 714              		.cfi_def_cfa_offset 4
 715 0022 BD46     		mov	sp, r7
 716              		.cfi_def_cfa_register 13
 717              		@ sp needed
 718 0024 5DF8047B 		ldr	r7, [sp], #4
 719              		.cfi_restore 7
 720              		.cfi_def_cfa_offset 0
 721 0028 7047     		bx	lr
 722              	.L48:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 27


 723 002a 00BF     		.align	2
 724              	.L47:
 725 002c 68650040 		.word	1073767784
 726              		.cfi_endproc
 727              	.LFE15:
 728              		.size	SPIS_GetRxBufferSize, .-SPIS_GetRxBufferSize
 729              		.section	.text.SPIS_GetTxBufferSize,"ax",%progbits
 730              		.align	2
 731              		.global	SPIS_GetTxBufferSize
 732              		.thumb
 733              		.thumb_func
 734              		.type	SPIS_GetTxBufferSize, %function
 735              	SPIS_GetTxBufferSize:
 736              	.LFB16:
 761:.\Generated_Source\PSoC5/SPIS.c **** 
 762:.\Generated_Source\PSoC5/SPIS.c **** 
 763:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 764:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_GetTxBufferSize
 765:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 766:.\Generated_Source\PSoC5/SPIS.c **** *
 767:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 768:.\Generated_Source\PSoC5/SPIS.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 769:.\Generated_Source\PSoC5/SPIS.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 770:.\Generated_Source\PSoC5/SPIS.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 771:.\Generated_Source\PSoC5/SPIS.c **** *  Software Buffer.
 772:.\Generated_Source\PSoC5/SPIS.c **** *
 773:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 774:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 775:.\Generated_Source\PSoC5/SPIS.c **** *
 776:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 777:.\Generated_Source\PSoC5/SPIS.c **** *  Integer count of the number of bytes/words in the TX buffer.
 778:.\Generated_Source\PSoC5/SPIS.c **** *
 779:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 780:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 781:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer.
 782:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 783:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer.
 784:.\Generated_Source\PSoC5/SPIS.c **** *
 785:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 786:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to find out how full the TX Buffer is.
 787:.\Generated_Source\PSoC5/SPIS.c **** *
 788:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 789:.\Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
 790:.\Generated_Source\PSoC5/SPIS.c **** *
 791:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 792:.\Generated_Source\PSoC5/SPIS.c **** uint8  SPIS_GetTxBufferSize(void) 
 793:.\Generated_Source\PSoC5/SPIS.c **** {
 737              		.loc 1 793 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 83B0     		sub	sp, sp, #12
 746              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 28


 747 0004 00AF     		add	r7, sp, #0
 748              		.cfi_def_cfa_register 7
 794:.\Generated_Source\PSoC5/SPIS.c ****     uint8 size;
 795:.\Generated_Source\PSoC5/SPIS.c **** 
 796:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 797:.\Generated_Source\PSoC5/SPIS.c **** 
 798:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 799:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 800:.\Generated_Source\PSoC5/SPIS.c **** 
 801:.\Generated_Source\PSoC5/SPIS.c ****         if(SPIS_txBufferRead == SPIS_txBufferWrite)
 802:.\Generated_Source\PSoC5/SPIS.c ****         {
 803:.\Generated_Source\PSoC5/SPIS.c ****             size = 0u;
 804:.\Generated_Source\PSoC5/SPIS.c ****         }
 805:.\Generated_Source\PSoC5/SPIS.c ****         else if(SPIS_txBufferRead < SPIS_txBufferWrite)
 806:.\Generated_Source\PSoC5/SPIS.c ****         {
 807:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_txBufferWrite - SPIS_txBufferRead);
 808:.\Generated_Source\PSoC5/SPIS.c ****         }
 809:.\Generated_Source\PSoC5/SPIS.c ****         else
 810:.\Generated_Source\PSoC5/SPIS.c ****         {
 811:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_TX_BUFFER_SIZE - SPIS_txBufferRead) + SPIS_txBufferWrite;
 812:.\Generated_Source\PSoC5/SPIS.c ****         }
 813:.\Generated_Source\PSoC5/SPIS.c **** 
 814:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 815:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 816:.\Generated_Source\PSoC5/SPIS.c **** 
 817:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 818:.\Generated_Source\PSoC5/SPIS.c **** 
 819:.\Generated_Source\PSoC5/SPIS.c ****         size = SPIS_TX_STATUS_REG;
 749              		.loc 1 819 0
 750 0006 0E4B     		ldr	r3, .L54
 751 0008 1B78     		ldrb	r3, [r3]
 752 000a FB71     		strb	r3, [r7, #7]
 820:.\Generated_Source\PSoC5/SPIS.c **** 
 821:.\Generated_Source\PSoC5/SPIS.c ****         /* Is the fifo is full. */
 822:.\Generated_Source\PSoC5/SPIS.c ****         if((size & SPIS_STS_TX_FIFO_EMPTY) != 0u)
 753              		.loc 1 822 0
 754 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 755 000e 03F00403 		and	r3, r3, #4
 756 0012 002B     		cmp	r3, #0
 757 0014 02D0     		beq	.L50
 823:.\Generated_Source\PSoC5/SPIS.c ****         {
 824:.\Generated_Source\PSoC5/SPIS.c ****             size = 0u;
 758              		.loc 1 824 0
 759 0016 0023     		movs	r3, #0
 760 0018 FB71     		strb	r3, [r7, #7]
 761 001a 09E0     		b	.L51
 762              	.L50:
 825:.\Generated_Source\PSoC5/SPIS.c ****         }
 826:.\Generated_Source\PSoC5/SPIS.c ****         else if((size & SPIS_STS_TX_FIFO_NOT_FULL) != 0u)
 763              		.loc 1 826 0
 764 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 765 001e 03F00203 		and	r3, r3, #2
 766 0022 002B     		cmp	r3, #0
 767 0024 02D0     		beq	.L52
 827:.\Generated_Source\PSoC5/SPIS.c ****         {
 828:.\Generated_Source\PSoC5/SPIS.c ****             size = 1u;
 768              		.loc 1 828 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 29


 769 0026 0123     		movs	r3, #1
 770 0028 FB71     		strb	r3, [r7, #7]
 771 002a 01E0     		b	.L51
 772              	.L52:
 829:.\Generated_Source\PSoC5/SPIS.c ****         }
 830:.\Generated_Source\PSoC5/SPIS.c ****         else
 831:.\Generated_Source\PSoC5/SPIS.c ****         {
 832:.\Generated_Source\PSoC5/SPIS.c ****             size = 4u;
 773              		.loc 1 832 0
 774 002c 0423     		movs	r3, #4
 775 002e FB71     		strb	r3, [r7, #7]
 776              	.L51:
 833:.\Generated_Source\PSoC5/SPIS.c ****         }
 834:.\Generated_Source\PSoC5/SPIS.c **** 
 835:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 836:.\Generated_Source\PSoC5/SPIS.c **** 
 837:.\Generated_Source\PSoC5/SPIS.c ****     return (size);
 777              		.loc 1 837 0
 778 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 838:.\Generated_Source\PSoC5/SPIS.c **** }
 779              		.loc 1 838 0
 780 0032 1846     		mov	r0, r3
 781 0034 0C37     		adds	r7, r7, #12
 782              		.cfi_def_cfa_offset 4
 783 0036 BD46     		mov	sp, r7
 784              		.cfi_def_cfa_register 13
 785              		@ sp needed
 786 0038 5DF8047B 		ldr	r7, [sp], #4
 787              		.cfi_restore 7
 788              		.cfi_def_cfa_offset 0
 789 003c 7047     		bx	lr
 790              	.L55:
 791 003e 00BF     		.align	2
 792              	.L54:
 793 0040 68640040 		.word	1073767528
 794              		.cfi_endproc
 795              	.LFE16:
 796              		.size	SPIS_GetTxBufferSize, .-SPIS_GetTxBufferSize
 797              		.section	.text.SPIS_ClearRxBuffer,"ax",%progbits
 798              		.align	2
 799              		.global	SPIS_ClearRxBuffer
 800              		.thumb
 801              		.thumb_func
 802              		.type	SPIS_ClearRxBuffer, %function
 803              	SPIS_ClearRxBuffer:
 804              	.LFB17:
 839:.\Generated_Source\PSoC5/SPIS.c **** 
 840:.\Generated_Source\PSoC5/SPIS.c **** 
 841:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 842:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearRxBuffer
 843:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 844:.\Generated_Source\PSoC5/SPIS.c **** *
 845:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 846:.\Generated_Source\PSoC5/SPIS.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 847:.\Generated_Source\PSoC5/SPIS.c **** *
 848:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 849:.\Generated_Source\PSoC5/SPIS.c **** *  None.
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 30


 850:.\Generated_Source\PSoC5/SPIS.c **** *
 851:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 852:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 853:.\Generated_Source\PSoC5/SPIS.c **** *
 854:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 855:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 856:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer, modified every function
 857:.\Generated_Source\PSoC5/SPIS.c **** *  call - resets to zero.
 858:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 859:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer, modified every function call -
 860:.\Generated_Source\PSoC5/SPIS.c **** *  resets to zero.
 861:.\Generated_Source\PSoC5/SPIS.c **** *
 862:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 863:.\Generated_Source\PSoC5/SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 864:.\Generated_Source\PSoC5/SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 865:.\Generated_Source\PSoC5/SPIS.c **** *  remained in the RAM.
 866:.\Generated_Source\PSoC5/SPIS.c **** *
 867:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 868:.\Generated_Source\PSoC5/SPIS.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 869:.\Generated_Source\PSoC5/SPIS.c **** *
 870:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 871:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 872:.\Generated_Source\PSoC5/SPIS.c **** *
 873:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 874:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearRxBuffer(void) 
 875:.\Generated_Source\PSoC5/SPIS.c **** {
 805              		.loc 1 875 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810 0000 80B4     		push	{r7}
 811              		.cfi_def_cfa_offset 4
 812              		.cfi_offset 7, -4
 813 0002 00AF     		add	r7, sp, #0
 814              		.cfi_def_cfa_register 7
 876:.\Generated_Source\PSoC5/SPIS.c ****     /* Clear Hardware RX FIFO */
 877:.\Generated_Source\PSoC5/SPIS.c ****     while((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 815              		.loc 1 877 0
 816 0004 01E0     		b	.L57
 817              	.L58:
 878:.\Generated_Source\PSoC5/SPIS.c ****     {
 879:.\Generated_Source\PSoC5/SPIS.c ****         CY_GET_REG8(SPIS_RXDATA_PTR);
 818              		.loc 1 879 0
 819 0006 064B     		ldr	r3, .L59
 820 0008 1B78     		ldrb	r3, [r3]
 821              	.L57:
 877:.\Generated_Source\PSoC5/SPIS.c ****     {
 822              		.loc 1 877 0
 823 000a 064B     		ldr	r3, .L59+4
 824 000c 1B78     		ldrb	r3, [r3]
 825 000e DBB2     		uxtb	r3, r3
 826 0010 03F00803 		and	r3, r3, #8
 827 0014 002B     		cmp	r3, #0
 828 0016 F6D1     		bne	.L58
 880:.\Generated_Source\PSoC5/SPIS.c ****     }
 881:.\Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 31


 882:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 883:.\Generated_Source\PSoC5/SPIS.c **** 
 884:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable interrupt to protect variables that could change on interrupt. */
 885:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 886:.\Generated_Source\PSoC5/SPIS.c **** 
 887:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead  = 0u;
 888:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
 889:.\Generated_Source\PSoC5/SPIS.c **** 		SPIS_rxBufferFull  = 0u;
 890:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable interrupt. */
 891:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 892:.\Generated_Source\PSoC5/SPIS.c **** 
 893:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 894:.\Generated_Source\PSoC5/SPIS.c **** }
 829              		.loc 1 894 0
 830 0018 BD46     		mov	sp, r7
 831              		.cfi_def_cfa_register 13
 832              		@ sp needed
 833 001a 5DF8047B 		ldr	r7, [sp], #4
 834              		.cfi_restore 7
 835              		.cfi_def_cfa_offset 0
 836 001e 7047     		bx	lr
 837              	.L60:
 838              		.align	2
 839              	.L59:
 840 0020 59650040 		.word	1073767769
 841 0024 68650040 		.word	1073767784
 842              		.cfi_endproc
 843              	.LFE17:
 844              		.size	SPIS_ClearRxBuffer, .-SPIS_ClearRxBuffer
 845              		.section	.text.SPIS_ClearTxBuffer,"ax",%progbits
 846              		.align	2
 847              		.global	SPIS_ClearTxBuffer
 848              		.thumb
 849              		.thumb_func
 850              		.type	SPIS_ClearTxBuffer, %function
 851              	SPIS_ClearTxBuffer:
 852              	.LFB18:
 895:.\Generated_Source\PSoC5/SPIS.c **** 
 896:.\Generated_Source\PSoC5/SPIS.c **** 
 897:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 898:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearTxBuffer
 899:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 900:.\Generated_Source\PSoC5/SPIS.c **** *
 901:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 902:.\Generated_Source\PSoC5/SPIS.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 903:.\Generated_Source\PSoC5/SPIS.c **** *
 904:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 905:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 906:.\Generated_Source\PSoC5/SPIS.c **** *
 907:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 908:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 909:.\Generated_Source\PSoC5/SPIS.c **** *
 910:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 911:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 912:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer, modified every function
 913:.\Generated_Source\PSoC5/SPIS.c **** *  call - resets to zero.
 914:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 32


 915:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer, modified every function call -
 916:.\Generated_Source\PSoC5/SPIS.c **** *  resets to zero.
 917:.\Generated_Source\PSoC5/SPIS.c **** *
 918:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 919:.\Generated_Source\PSoC5/SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 920:.\Generated_Source\PSoC5/SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 921:.\Generated_Source\PSoC5/SPIS.c **** *  remained in the RAM.
 922:.\Generated_Source\PSoC5/SPIS.c **** *
 923:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 924:.\Generated_Source\PSoC5/SPIS.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 925:.\Generated_Source\PSoC5/SPIS.c **** *  overwritten.
 926:.\Generated_Source\PSoC5/SPIS.c **** *
 927:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 928:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 929:.\Generated_Source\PSoC5/SPIS.c **** *
 930:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 931:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearTxBuffer(void) 
 932:.\Generated_Source\PSoC5/SPIS.c **** {
 853              		.loc 1 932 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 8
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857 0000 80B5     		push	{r7, lr}
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 861 0002 82B0     		sub	sp, sp, #8
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              		.cfi_def_cfa_register 7
 933:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 934:.\Generated_Source\PSoC5/SPIS.c **** 
 935:.\Generated_Source\PSoC5/SPIS.c ****     /* Clear Hardware TX FIFO */
 936:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 865              		.loc 1 936 0
 866 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 867 000a 0346     		mov	r3, r0
 868 000c FB71     		strb	r3, [r7, #7]
 937:.\Generated_Source\PSoC5/SPIS.c **** 
 938:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_DATA_WIDTH <= 8u)
 939:.\Generated_Source\PSoC5/SPIS.c **** 
 940:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
 941:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 869              		.loc 1 941 0
 870 000e 0B4A     		ldr	r2, .L62
 871 0010 0A4B     		ldr	r3, .L62
 872 0012 1B78     		ldrb	r3, [r3]
 873 0014 DBB2     		uxtb	r3, r3
 874 0016 43F00303 		orr	r3, r3, #3
 875 001a DBB2     		uxtb	r3, r3
 876 001c 1370     		strb	r3, [r2]
 942:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 877              		.loc 1 942 0
 878 001e 074A     		ldr	r2, .L62
 879 0020 064B     		ldr	r3, .L62
 880 0022 1B78     		ldrb	r3, [r3]
 881 0024 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 33


 882 0026 23F00303 		bic	r3, r3, #3
 883 002a DBB2     		uxtb	r3, r3
 884 002c 1370     		strb	r3, [r2]
 943:.\Generated_Source\PSoC5/SPIS.c **** 
 944:.\Generated_Source\PSoC5/SPIS.c ****     #else
 945:.\Generated_Source\PSoC5/SPIS.c **** 
 946:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
 947:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 948:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 949:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_FIFO_CLR;
 950:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_FIFO_CLR;
 951:.\Generated_Source\PSoC5/SPIS.c **** 
 952:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_DATA_WIDTH > 8u */
 953:.\Generated_Source\PSoC5/SPIS.c **** 
 954:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 885              		.loc 1 954 0
 886 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 887 0030 1846     		mov	r0, r3
 888 0032 FFF7FEFF 		bl	CyExitCriticalSection
 955:.\Generated_Source\PSoC5/SPIS.c **** 
 956:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 957:.\Generated_Source\PSoC5/SPIS.c **** 
 958:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 959:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 960:.\Generated_Source\PSoC5/SPIS.c **** 
 961:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferRead  = 0u;
 962:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/SPIS.c **** 		SPIS_txBufferFull  = 0u;
 964:.\Generated_Source\PSoC5/SPIS.c **** 		
 965:.\Generated_Source\PSoC5/SPIS.c ****         /* If Buffer is empty then disable TX FIFO status interrupt */
 966:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG &= (uint8)~SPIS_STS_TX_FIFO_NOT_FULL;
 967:.\Generated_Source\PSoC5/SPIS.c **** 
 968:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 969:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 970:.\Generated_Source\PSoC5/SPIS.c **** 
 971:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 972:.\Generated_Source\PSoC5/SPIS.c **** }
 889              		.loc 1 972 0
 890 0036 0837     		adds	r7, r7, #8
 891              		.cfi_def_cfa_offset 8
 892 0038 BD46     		mov	sp, r7
 893              		.cfi_def_cfa_register 13
 894              		@ sp needed
 895 003a 80BD     		pop	{r7, pc}
 896              	.L63:
 897              		.align	2
 898              	.L62:
 899 003c 99650040 		.word	1073767833
 900              		.cfi_endproc
 901              	.LFE18:
 902              		.size	SPIS_ClearTxBuffer, .-SPIS_ClearTxBuffer
 903              		.section	.text.SPIS_PutArray,"ax",%progbits
 904              		.align	2
 905              		.global	SPIS_PutArray
 906              		.thumb
 907              		.thumb_func
 908              		.type	SPIS_PutArray, %function
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 34


 909              	SPIS_PutArray:
 910              	.LFB19:
 973:.\Generated_Source\PSoC5/SPIS.c **** 
 974:.\Generated_Source\PSoC5/SPIS.c **** 
 975:.\Generated_Source\PSoC5/SPIS.c **** #if (SPIS_BIDIRECTIONAL_MODE != 0u)
 976:.\Generated_Source\PSoC5/SPIS.c **** 
 977:.\Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 978:.\Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_TxEnable
 979:.\Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
 980:.\Generated_Source\PSoC5/SPIS.c ****     *
 981:.\Generated_Source\PSoC5/SPIS.c ****     * Summary:
 982:.\Generated_Source\PSoC5/SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
 983:.\Generated_Source\PSoC5/SPIS.c ****     *  will set the bi-directional pin to transmit.
 984:.\Generated_Source\PSoC5/SPIS.c ****     *
 985:.\Generated_Source\PSoC5/SPIS.c ****     * Parameters:
 986:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
 987:.\Generated_Source\PSoC5/SPIS.c ****     *
 988:.\Generated_Source\PSoC5/SPIS.c ****     * Return:
 989:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
 990:.\Generated_Source\PSoC5/SPIS.c ****     *
 991:.\Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
 992:.\Generated_Source\PSoC5/SPIS.c ****     void SPIS_TxEnable(void) 
 993:.\Generated_Source\PSoC5/SPIS.c ****     {
 994:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_CONTROL_REG |= SPIS_CTRL_TX_SIGNAL_EN;
 995:.\Generated_Source\PSoC5/SPIS.c ****     }
 996:.\Generated_Source\PSoC5/SPIS.c **** 
 997:.\Generated_Source\PSoC5/SPIS.c **** 
 998:.\Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 999:.\Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_TxDisable
1000:.\Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
1001:.\Generated_Source\PSoC5/SPIS.c ****     *
1002:.\Generated_Source\PSoC5/SPIS.c ****     * Summary:
1003:.\Generated_Source\PSoC5/SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
1004:.\Generated_Source\PSoC5/SPIS.c ****     *  will set the bi-directional pin to receive.
1005:.\Generated_Source\PSoC5/SPIS.c ****     *
1006:.\Generated_Source\PSoC5/SPIS.c ****     * Parameters:
1007:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
1008:.\Generated_Source\PSoC5/SPIS.c ****     *
1009:.\Generated_Source\PSoC5/SPIS.c ****     * Return:
1010:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
1011:.\Generated_Source\PSoC5/SPIS.c ****     *
1012:.\Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
1013:.\Generated_Source\PSoC5/SPIS.c ****     void SPIS_TxDisable(void) 
1014:.\Generated_Source\PSoC5/SPIS.c ****     {
1015:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_CONTROL_REG &= (uint8)~SPIS_CTRL_TX_SIGNAL_EN;
1016:.\Generated_Source\PSoC5/SPIS.c ****     }
1017:.\Generated_Source\PSoC5/SPIS.c **** 
1018:.\Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_BIDIRECTIONAL_MODE != 0u */
1019:.\Generated_Source\PSoC5/SPIS.c **** 
1020:.\Generated_Source\PSoC5/SPIS.c **** 
1021:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1022:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_PutArray
1023:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1024:.\Generated_Source\PSoC5/SPIS.c **** *
1025:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1026:.\Generated_Source\PSoC5/SPIS.c **** *  Write available data from RAM/ROM to the TX buffer while space is available
1027:.\Generated_Source\PSoC5/SPIS.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer. If
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 35


1028:.\Generated_Source\PSoC5/SPIS.c **** *  used Mode 00 or 01 before PutArray() function should be called
1029:.\Generated_Source\PSoC5/SPIS.c **** *  WriteTxDataZero() function.
1030:.\Generated_Source\PSoC5/SPIS.c **** *
1031:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1032:.\Generated_Source\PSoC5/SPIS.c **** *  *buffer: Pointer to the location in RAM containing the data to send
1033:.\Generated_Source\PSoC5/SPIS.c **** *  byteCount: The number of bytes to move to the transmit buffer.
1034:.\Generated_Source\PSoC5/SPIS.c **** *
1035:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1036:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1037:.\Generated_Source\PSoC5/SPIS.c **** *
1038:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1039:.\Generated_Source\PSoC5/SPIS.c **** *  Will stay in this routine until all data has been sent.  May get locked in
1040:.\Generated_Source\PSoC5/SPIS.c **** *  this loop if data is not being initiated by the master if there is not
1041:.\Generated_Source\PSoC5/SPIS.c **** *  enough room in the TX FIFO.
1042:.\Generated_Source\PSoC5/SPIS.c **** *
1043:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
1044:.\Generated_Source\PSoC5/SPIS.c **** *  No.
1045:.\Generated_Source\PSoC5/SPIS.c **** *
1046:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1047:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_PutArray(const uint8 buffer[], uint8 byteCount)
1048:.\Generated_Source\PSoC5/SPIS.c ****                                                                     
1049:.\Generated_Source\PSoC5/SPIS.c **** {
 911              		.loc 1 1049 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 16
 914              		@ frame_needed = 1, uses_anonymous_args = 0
 915 0000 80B5     		push	{r7, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 7, -8
 918              		.cfi_offset 14, -4
 919 0002 84B0     		sub	sp, sp, #16
 920              		.cfi_def_cfa_offset 24
 921 0004 00AF     		add	r7, sp, #0
 922              		.cfi_def_cfa_register 7
 923 0006 7860     		str	r0, [r7, #4]
 924 0008 0B46     		mov	r3, r1
 925 000a FB70     		strb	r3, [r7, #3]
1050:.\Generated_Source\PSoC5/SPIS.c ****     uint8 bufIndex;
1051:.\Generated_Source\PSoC5/SPIS.c ****     bufIndex = 0u;
 926              		.loc 1 1051 0
 927 000c 0023     		movs	r3, #0
 928 000e FB73     		strb	r3, [r7, #15]
1052:.\Generated_Source\PSoC5/SPIS.c **** 
1053:.\Generated_Source\PSoC5/SPIS.c ****     while(byteCount > 0u)
 929              		.loc 1 1053 0
 930 0010 0CE0     		b	.L65
 931              	.L66:
1054:.\Generated_Source\PSoC5/SPIS.c ****     {
1055:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_WriteTxData(buffer[bufIndex]);
 932              		.loc 1 1055 0
 933 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 934 0014 7A68     		ldr	r2, [r7, #4]
 935 0016 1344     		add	r3, r3, r2
 936 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 937 001a 1846     		mov	r0, r3
 938 001c FFF7FEFF 		bl	SPIS_WriteTxData
1056:.\Generated_Source\PSoC5/SPIS.c ****         bufIndex++;
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 36


 939              		.loc 1 1056 0
 940 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941 0022 0133     		adds	r3, r3, #1
 942 0024 FB73     		strb	r3, [r7, #15]
1057:.\Generated_Source\PSoC5/SPIS.c ****         byteCount--;
 943              		.loc 1 1057 0
 944 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 945 0028 013B     		subs	r3, r3, #1
 946 002a FB70     		strb	r3, [r7, #3]
 947              	.L65:
1053:.\Generated_Source\PSoC5/SPIS.c ****     {
 948              		.loc 1 1053 0
 949 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 950 002e 002B     		cmp	r3, #0
 951 0030 EFD1     		bne	.L66
1058:.\Generated_Source\PSoC5/SPIS.c ****     }
1059:.\Generated_Source\PSoC5/SPIS.c **** }
 952              		.loc 1 1059 0
 953 0032 1037     		adds	r7, r7, #16
 954              		.cfi_def_cfa_offset 8
 955 0034 BD46     		mov	sp, r7
 956              		.cfi_def_cfa_register 13
 957              		@ sp needed
 958 0036 80BD     		pop	{r7, pc}
 959              		.cfi_endproc
 960              	.LFE19:
 961              		.size	SPIS_PutArray, .-SPIS_PutArray
 962              		.section	.text.SPIS_ClearFIFO,"ax",%progbits
 963              		.align	2
 964              		.global	SPIS_ClearFIFO
 965              		.thumb
 966              		.thumb_func
 967              		.type	SPIS_ClearFIFO, %function
 968              	SPIS_ClearFIFO:
 969              	.LFB20:
1060:.\Generated_Source\PSoC5/SPIS.c **** 
1061:.\Generated_Source\PSoC5/SPIS.c **** 
1062:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1063:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearFIFO
1064:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1065:.\Generated_Source\PSoC5/SPIS.c **** *
1066:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1067:.\Generated_Source\PSoC5/SPIS.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
1068:.\Generated_Source\PSoC5/SPIS.c **** *
1069:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1070:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1071:.\Generated_Source\PSoC5/SPIS.c **** *
1072:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1073:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1074:.\Generated_Source\PSoC5/SPIS.c **** *
1075:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1076:.\Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
1077:.\Generated_Source\PSoC5/SPIS.c **** *
1078:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1079:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearFIFO(void) 
1080:.\Generated_Source\PSoC5/SPIS.c **** {
 970              		.loc 1 1080 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 37


 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 8
 973              		@ frame_needed = 1, uses_anonymous_args = 0
 974 0000 80B5     		push	{r7, lr}
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 7, -8
 977              		.cfi_offset 14, -4
 978 0002 82B0     		sub	sp, sp, #8
 979              		.cfi_def_cfa_offset 16
 980 0004 00AF     		add	r7, sp, #0
 981              		.cfi_def_cfa_register 7
1081:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
1082:.\Generated_Source\PSoC5/SPIS.c **** 
1083:.\Generated_Source\PSoC5/SPIS.c ****     while((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 982              		.loc 1 1083 0
 983 0006 01E0     		b	.L68
 984              	.L69:
1084:.\Generated_Source\PSoC5/SPIS.c ****     {
1085:.\Generated_Source\PSoC5/SPIS.c ****         CY_GET_REG8(SPIS_RXDATA_PTR);
 985              		.loc 1 1085 0
 986 0008 114B     		ldr	r3, .L70
 987 000a 1B78     		ldrb	r3, [r3]
 988              	.L68:
1083:.\Generated_Source\PSoC5/SPIS.c ****     {
 989              		.loc 1 1083 0
 990 000c 114B     		ldr	r3, .L70+4
 991 000e 1B78     		ldrb	r3, [r3]
 992 0010 DBB2     		uxtb	r3, r3
 993 0012 03F00803 		and	r3, r3, #8
 994 0016 002B     		cmp	r3, #0
 995 0018 F6D1     		bne	.L69
1086:.\Generated_Source\PSoC5/SPIS.c ****     }
1087:.\Generated_Source\PSoC5/SPIS.c **** 
1088:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 996              		.loc 1 1088 0
 997 001a FFF7FEFF 		bl	CyEnterCriticalSection
 998 001e 0346     		mov	r3, r0
 999 0020 FB71     		strb	r3, [r7, #7]
1089:.\Generated_Source\PSoC5/SPIS.c **** 
1090:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_DATA_WIDTH <= 8u)
1091:.\Generated_Source\PSoC5/SPIS.c **** 
1092:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
1093:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 1000              		.loc 1 1093 0
 1001 0022 0D4A     		ldr	r2, .L70+8
 1002 0024 0C4B     		ldr	r3, .L70+8
 1003 0026 1B78     		ldrb	r3, [r3]
 1004 0028 DBB2     		uxtb	r3, r3
 1005 002a 43F00303 		orr	r3, r3, #3
 1006 002e DBB2     		uxtb	r3, r3
 1007 0030 1370     		strb	r3, [r2]
1094:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 1008              		.loc 1 1094 0
 1009 0032 094A     		ldr	r2, .L70+8
 1010 0034 084B     		ldr	r3, .L70+8
 1011 0036 1B78     		ldrb	r3, [r3]
 1012 0038 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 38


 1013 003a 23F00303 		bic	r3, r3, #3
 1014 003e DBB2     		uxtb	r3, r3
 1015 0040 1370     		strb	r3, [r2]
1095:.\Generated_Source\PSoC5/SPIS.c **** 
1096:.\Generated_Source\PSoC5/SPIS.c ****     #else
1097:.\Generated_Source\PSoC5/SPIS.c **** 
1098:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
1099:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
1100:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
1101:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_FIFO_CLR;
1102:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_FIFO_CLR;
1103:.\Generated_Source\PSoC5/SPIS.c **** 
1104:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_DATA_WIDTH <= 8u */
1105:.\Generated_Source\PSoC5/SPIS.c **** 
1106:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 1016              		.loc 1 1106 0
 1017 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1018 0044 1846     		mov	r0, r3
 1019 0046 FFF7FEFF 		bl	CyExitCriticalSection
1107:.\Generated_Source\PSoC5/SPIS.c **** }
 1020              		.loc 1 1107 0
 1021 004a 0837     		adds	r7, r7, #8
 1022              		.cfi_def_cfa_offset 8
 1023 004c BD46     		mov	sp, r7
 1024              		.cfi_def_cfa_register 13
 1025              		@ sp needed
 1026 004e 80BD     		pop	{r7, pc}
 1027              	.L71:
 1028              		.align	2
 1029              	.L70:
 1030 0050 59650040 		.word	1073767769
 1031 0054 68650040 		.word	1073767784
 1032 0058 99650040 		.word	1073767833
 1033              		.cfi_endproc
 1034              	.LFE20:
 1035              		.size	SPIS_ClearFIFO, .-SPIS_ClearFIFO
 1036              		.section	.text.SPIS_EnableInt,"ax",%progbits
 1037              		.align	2
 1038              		.global	SPIS_EnableInt
 1039              		.thumb
 1040              		.thumb_func
 1041              		.type	SPIS_EnableInt, %function
 1042              	SPIS_EnableInt:
 1043              	.LFB21:
1108:.\Generated_Source\PSoC5/SPIS.c **** 
1109:.\Generated_Source\PSoC5/SPIS.c **** 
1110:.\Generated_Source\PSoC5/SPIS.c **** /* Following functions are for version Compatibility, they are obsolete.
1111:.\Generated_Source\PSoC5/SPIS.c **** *  Please do not use it in new projects.
1112:.\Generated_Source\PSoC5/SPIS.c **** */
1113:.\Generated_Source\PSoC5/SPIS.c **** 
1114:.\Generated_Source\PSoC5/SPIS.c **** 
1115:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1116:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableInt
1117:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1118:.\Generated_Source\PSoC5/SPIS.c **** *
1119:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1120:.\Generated_Source\PSoC5/SPIS.c **** *  Enable internal interrupt generation.
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 39


1121:.\Generated_Source\PSoC5/SPIS.c **** *
1122:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1123:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1124:.\Generated_Source\PSoC5/SPIS.c **** *
1125:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1126:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1127:.\Generated_Source\PSoC5/SPIS.c **** *
1128:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1129:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1130:.\Generated_Source\PSoC5/SPIS.c **** *
1131:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1132:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableInt(void) 
1133:.\Generated_Source\PSoC5/SPIS.c **** {
 1044              		.loc 1 1133 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048              		@ link register save eliminated.
 1049 0000 80B4     		push	{r7}
 1050              		.cfi_def_cfa_offset 4
 1051              		.cfi_offset 7, -4
 1052 0002 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
1134:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
1135:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
1136:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
1137:.\Generated_Source\PSoC5/SPIS.c **** 
1138:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
1139:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
1140:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
1141:.\Generated_Source\PSoC5/SPIS.c **** }
 1054              		.loc 1 1141 0
 1055 0004 BD46     		mov	sp, r7
 1056              		.cfi_def_cfa_register 13
 1057              		@ sp needed
 1058 0006 5DF8047B 		ldr	r7, [sp], #4
 1059              		.cfi_restore 7
 1060              		.cfi_def_cfa_offset 0
 1061 000a 7047     		bx	lr
 1062              		.cfi_endproc
 1063              	.LFE21:
 1064              		.size	SPIS_EnableInt, .-SPIS_EnableInt
 1065              		.section	.text.SPIS_DisableInt,"ax",%progbits
 1066              		.align	2
 1067              		.global	SPIS_DisableInt
 1068              		.thumb
 1069              		.thumb_func
 1070              		.type	SPIS_DisableInt, %function
 1071              	SPIS_DisableInt:
 1072              	.LFB22:
1142:.\Generated_Source\PSoC5/SPIS.c **** 
1143:.\Generated_Source\PSoC5/SPIS.c **** 
1144:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1145:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableInt
1146:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1147:.\Generated_Source\PSoC5/SPIS.c **** *
1148:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 40


1149:.\Generated_Source\PSoC5/SPIS.c **** *  Disable internal interrupt generation.
1150:.\Generated_Source\PSoC5/SPIS.c **** *
1151:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1152:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1153:.\Generated_Source\PSoC5/SPIS.c **** *
1154:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1155:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1156:.\Generated_Source\PSoC5/SPIS.c **** *
1157:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1158:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1159:.\Generated_Source\PSoC5/SPIS.c **** *
1160:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1161:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableInt(void) 
1162:.\Generated_Source\PSoC5/SPIS.c **** {
 1073              		.loc 1 1162 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 0
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077              		@ link register save eliminated.
 1078 0000 80B4     		push	{r7}
 1079              		.cfi_def_cfa_offset 4
 1080              		.cfi_offset 7, -4
 1081 0002 00AF     		add	r7, sp, #0
 1082              		.cfi_def_cfa_register 7
1163:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
1164:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
1165:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
1166:.\Generated_Source\PSoC5/SPIS.c **** 
1167:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
1168:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
1169:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
1170:.\Generated_Source\PSoC5/SPIS.c **** }
 1083              		.loc 1 1170 0
 1084 0004 BD46     		mov	sp, r7
 1085              		.cfi_def_cfa_register 13
 1086              		@ sp needed
 1087 0006 5DF8047B 		ldr	r7, [sp], #4
 1088              		.cfi_restore 7
 1089              		.cfi_def_cfa_offset 0
 1090 000a 7047     		bx	lr
 1091              		.cfi_endproc
 1092              	.LFE22:
 1093              		.size	SPIS_DisableInt, .-SPIS_DisableInt
 1094              		.section	.text.SPIS_SetInterruptMode,"ax",%progbits
 1095              		.align	2
 1096              		.global	SPIS_SetInterruptMode
 1097              		.thumb
 1098              		.thumb_func
 1099              		.type	SPIS_SetInterruptMode, %function
 1100              	SPIS_SetInterruptMode:
 1101              	.LFB23:
1171:.\Generated_Source\PSoC5/SPIS.c **** 
1172:.\Generated_Source\PSoC5/SPIS.c **** 
1173:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetInterruptMode
1175:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1176:.\Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 41


1177:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1178:.\Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
1179:.\Generated_Source\PSoC5/SPIS.c **** *
1180:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1181:.\Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1182:.\Generated_Source\PSoC5/SPIS.c **** *  header file).
1183:.\Generated_Source\PSoC5/SPIS.c **** *
1184:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1185:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1186:.\Generated_Source\PSoC5/SPIS.c **** *
1187:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1188:.\Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
1189:.\Generated_Source\PSoC5/SPIS.c **** *
1190:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_SetInterruptMode(uint8 intSrc) 
1192:.\Generated_Source\PSoC5/SPIS.c **** {
 1102              		.loc 1 1192 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 8
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106              		@ link register save eliminated.
 1107 0000 80B4     		push	{r7}
 1108              		.cfi_def_cfa_offset 4
 1109              		.cfi_offset 7, -4
 1110 0002 83B0     		sub	sp, sp, #12
 1111              		.cfi_def_cfa_offset 16
 1112 0004 00AF     		add	r7, sp, #0
 1113              		.cfi_def_cfa_register 7
 1114 0006 0346     		mov	r3, r0
 1115 0008 FB71     		strb	r3, [r7, #7]
1193:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_MASK_REG  = intSrc;
 1116              		.loc 1 1193 0
 1117 000a 054A     		ldr	r2, .L75
 1118 000c FB79     		ldrb	r3, [r7, #7]
 1119 000e 1370     		strb	r3, [r2]
1194:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = intSrc;
 1120              		.loc 1 1194 0
 1121 0010 044A     		ldr	r2, .L75+4
 1122 0012 FB79     		ldrb	r3, [r7, #7]
 1123 0014 1370     		strb	r3, [r2]
1195:.\Generated_Source\PSoC5/SPIS.c **** }
 1124              		.loc 1 1195 0
 1125 0016 0C37     		adds	r7, r7, #12
 1126              		.cfi_def_cfa_offset 4
 1127 0018 BD46     		mov	sp, r7
 1128              		.cfi_def_cfa_register 13
 1129              		@ sp needed
 1130 001a 5DF8047B 		ldr	r7, [sp], #4
 1131              		.cfi_restore 7
 1132              		.cfi_def_cfa_offset 0
 1133 001e 7047     		bx	lr
 1134              	.L76:
 1135              		.align	2
 1136              	.L75:
 1137 0020 88640040 		.word	1073767560
 1138 0024 88650040 		.word	1073767816
 1139              		.cfi_endproc
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 42


 1140              	.LFE23:
 1141              		.size	SPIS_SetInterruptMode, .-SPIS_SetInterruptMode
 1142              		.section	.text.SPIS_ReadStatus,"ax",%progbits
 1143              		.align	2
 1144              		.global	SPIS_ReadStatus
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	SPIS_ReadStatus, %function
 1148              	SPIS_ReadStatus:
 1149              	.LFB24:
1196:.\Generated_Source\PSoC5/SPIS.c **** 
1197:.\Generated_Source\PSoC5/SPIS.c **** 
1198:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1199:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadStatus
1200:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1201:.\Generated_Source\PSoC5/SPIS.c **** *
1202:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1203:.\Generated_Source\PSoC5/SPIS.c **** *  Read the status register for the component.
1204:.\Generated_Source\PSoC5/SPIS.c **** *
1205:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1206:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1207:.\Generated_Source\PSoC5/SPIS.c **** *
1208:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1209:.\Generated_Source\PSoC5/SPIS.c **** *  Contents of the status register.
1210:.\Generated_Source\PSoC5/SPIS.c **** *
1211:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
1212:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatus - used to store in software status register,
1213:.\Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
1214:.\Generated_Source\PSoC5/SPIS.c **** *
1215:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1216:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the status register for error detection
1217:.\Generated_Source\PSoC5/SPIS.c **** *  and flow control.
1218:.\Generated_Source\PSoC5/SPIS.c **** *
1219:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1220:.\Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
1221:.\Generated_Source\PSoC5/SPIS.c **** *
1222:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
1223:.\Generated_Source\PSoC5/SPIS.c **** *  No.
1224:.\Generated_Source\PSoC5/SPIS.c **** *
1225:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1226:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadStatus(void) 
1227:.\Generated_Source\PSoC5/SPIS.c **** {
 1150              		.loc 1 1227 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 8
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154              		@ link register save eliminated.
 1155 0000 80B4     		push	{r7}
 1156              		.cfi_def_cfa_offset 4
 1157              		.cfi_offset 7, -4
 1158 0002 83B0     		sub	sp, sp, #12
 1159              		.cfi_def_cfa_offset 16
 1160 0004 00AF     		add	r7, sp, #0
 1161              		.cfi_def_cfa_register 7
1228:.\Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
1229:.\Generated_Source\PSoC5/SPIS.c **** 
1230:.\Generated_Source\PSoC5/SPIS.c ****     #if ((SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED))
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 43


1231:.\Generated_Source\PSoC5/SPIS.c **** 
1232:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableInt();
1233:.\Generated_Source\PSoC5/SPIS.c **** 
1234:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx) |
1235:.\Generated_Source\PSoC5/SPIS.c ****               (SPIS_GET_STATUS_RX(SPIS_swStatusRx) & (uint8)~SPIS_STS_RX_FIFO_FULL);
1236:.\Generated_Source\PSoC5/SPIS.c **** 
1237:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = 0u;
1238:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusRx = 0u;
1239:.\Generated_Source\PSoC5/SPIS.c **** 
1240:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
1241:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableInt();
1242:.\Generated_Source\PSoC5/SPIS.c **** 
1243:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !((SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED)) */
1244:.\Generated_Source\PSoC5/SPIS.c **** 
1245:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_TX_STATUS_REG | (SPIS_RX_STATUS_REG &
 1162              		.loc 1 1245 0
 1163 0006 0A4B     		ldr	r3, .L79
 1164 0008 1B78     		ldrb	r3, [r3]
 1165 000a DBB2     		uxtb	r3, r3
 1166 000c DAB2     		uxtb	r2, r3
 1167 000e 094B     		ldr	r3, .L79+4
 1168 0010 1B78     		ldrb	r3, [r3]
 1169 0012 DBB2     		uxtb	r3, r3
 1170 0014 DBB2     		uxtb	r3, r3
 1171 0016 23F04003 		bic	r3, r3, #64
 1172 001a DBB2     		uxtb	r3, r3
 1173 001c 1343     		orrs	r3, r3, r2
 1174 001e DBB2     		uxtb	r3, r3
 1175 0020 FB71     		strb	r3, [r7, #7]
1246:.\Generated_Source\PSoC5/SPIS.c ****                                                       (uint8)~SPIS_STS_RX_FIFO_FULL);
1247:.\Generated_Source\PSoC5/SPIS.c **** 
1248:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* (SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED) */
1249:.\Generated_Source\PSoC5/SPIS.c **** 
1250:.\Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 1176              		.loc 1 1250 0
 1177 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1251:.\Generated_Source\PSoC5/SPIS.c **** }
 1178              		.loc 1 1251 0
 1179 0024 1846     		mov	r0, r3
 1180 0026 0C37     		adds	r7, r7, #12
 1181              		.cfi_def_cfa_offset 4
 1182 0028 BD46     		mov	sp, r7
 1183              		.cfi_def_cfa_register 13
 1184              		@ sp needed
 1185 002a 5DF8047B 		ldr	r7, [sp], #4
 1186              		.cfi_restore 7
 1187              		.cfi_def_cfa_offset 0
 1188 002e 7047     		bx	lr
 1189              	.L80:
 1190              		.align	2
 1191              	.L79:
 1192 0030 68640040 		.word	1073767528
 1193 0034 68650040 		.word	1073767784
 1194              		.cfi_endproc
 1195              	.LFE24:
 1196              		.size	SPIS_ReadStatus, .-SPIS_ReadStatus
 1197              		.text
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 44


 1198              	.Letext0:
 1199              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1200              		.section	.debug_info,"",%progbits
 1201              	.Ldebug_info0:
 1202 0000 10040000 		.4byte	0x410
 1203 0004 0400     		.2byte	0x4
 1204 0006 00000000 		.4byte	.Ldebug_abbrev0
 1205 000a 04       		.byte	0x4
 1206 000b 01       		.uleb128 0x1
 1207 000c 6F010000 		.4byte	.LASF53
 1208 0010 01       		.byte	0x1
 1209 0011 20000000 		.4byte	.LASF54
 1210 0015 98020000 		.4byte	.LASF55
 1211 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1212 001d 00000000 		.4byte	0
 1213 0021 00000000 		.4byte	.Ldebug_line0
 1214 0025 02       		.uleb128 0x2
 1215 0026 01       		.byte	0x1
 1216 0027 06       		.byte	0x6
 1217 0028 70030000 		.4byte	.LASF0
 1218 002c 02       		.uleb128 0x2
 1219 002d 01       		.byte	0x1
 1220 002e 08       		.byte	0x8
 1221 002f 50010000 		.4byte	.LASF1
 1222 0033 02       		.uleb128 0x2
 1223 0034 02       		.byte	0x2
 1224 0035 05       		.byte	0x5
 1225 0036 1E030000 		.4byte	.LASF2
 1226 003a 02       		.uleb128 0x2
 1227 003b 02       		.byte	0x2
 1228 003c 07       		.byte	0x7
 1229 003d 7C030000 		.4byte	.LASF3
 1230 0041 02       		.uleb128 0x2
 1231 0042 04       		.byte	0x4
 1232 0043 05       		.byte	0x5
 1233 0044 4E030000 		.4byte	.LASF4
 1234 0048 02       		.uleb128 0x2
 1235 0049 04       		.byte	0x4
 1236 004a 07       		.byte	0x7
 1237 004b F7000000 		.4byte	.LASF5
 1238 004f 02       		.uleb128 0x2
 1239 0050 08       		.byte	0x8
 1240 0051 05       		.byte	0x5
 1241 0052 E9020000 		.4byte	.LASF6
 1242 0056 02       		.uleb128 0x2
 1243 0057 08       		.byte	0x8
 1244 0058 07       		.byte	0x7
 1245 0059 55020000 		.4byte	.LASF7
 1246 005d 03       		.uleb128 0x3
 1247 005e 04       		.byte	0x4
 1248 005f 05       		.byte	0x5
 1249 0060 696E7400 		.ascii	"int\000"
 1250 0064 02       		.uleb128 0x2
 1251 0065 04       		.byte	0x4
 1252 0066 07       		.byte	0x7
 1253 0067 48020000 		.4byte	.LASF8
 1254 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 45


 1255 006c 09010000 		.4byte	.LASF12
 1256 0070 02       		.byte	0x2
 1257 0071 3801     		.2byte	0x138
 1258 0073 2C000000 		.4byte	0x2c
 1259 0077 02       		.uleb128 0x2
 1260 0078 04       		.byte	0x4
 1261 0079 04       		.byte	0x4
 1262 007a E7000000 		.4byte	.LASF9
 1263 007e 02       		.uleb128 0x2
 1264 007f 08       		.byte	0x8
 1265 0080 04       		.byte	0x4
 1266 0081 FD010000 		.4byte	.LASF10
 1267 0085 02       		.uleb128 0x2
 1268 0086 01       		.byte	0x1
 1269 0087 08       		.byte	0x8
 1270 0088 19030000 		.4byte	.LASF11
 1271 008c 04       		.uleb128 0x4
 1272 008d F2000000 		.4byte	.LASF13
 1273 0091 02       		.byte	0x2
 1274 0092 E201     		.2byte	0x1e2
 1275 0094 98000000 		.4byte	0x98
 1276 0098 05       		.uleb128 0x5
 1277 0099 6B000000 		.4byte	0x6b
 1278 009d 02       		.uleb128 0x2
 1279 009e 04       		.byte	0x4
 1280 009f 07       		.byte	0x7
 1281 00a0 E0020000 		.4byte	.LASF14
 1282 00a4 06       		.uleb128 0x6
 1283 00a5 6C020000 		.4byte	.LASF15
 1284 00a9 01       		.byte	0x1
 1285 00aa 43       		.byte	0x43
 1286 00ab 00000000 		.4byte	.LFB0
 1287 00af 30000000 		.4byte	.LFE0-.LFB0
 1288 00b3 01       		.uleb128 0x1
 1289 00b4 9C       		.byte	0x9c
 1290 00b5 07       		.uleb128 0x7
 1291 00b6 19020000 		.4byte	.LASF17
 1292 00ba 01       		.byte	0x1
 1293 00bb 8E       		.byte	0x8e
 1294 00bc 00000000 		.4byte	.LFB1
 1295 00c0 58000000 		.4byte	.LFE1-.LFB1
 1296 00c4 01       		.uleb128 0x1
 1297 00c5 9C       		.byte	0x9c
 1298 00c6 D9000000 		.4byte	0xd9
 1299 00ca 08       		.uleb128 0x8
 1300 00cb 2A010000 		.4byte	.LASF19
 1301 00cf 01       		.byte	0x1
 1302 00d0 90       		.byte	0x90
 1303 00d1 6B000000 		.4byte	0x6b
 1304 00d5 02       		.uleb128 0x2
 1305 00d6 91       		.byte	0x91
 1306 00d7 77       		.sleb128 -9
 1307 00d8 00       		.byte	0
 1308 00d9 06       		.uleb128 0x6
 1309 00da 15000000 		.4byte	.LASF16
 1310 00de 01       		.byte	0x1
 1311 00df BB       		.byte	0xbb
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 46


 1312 00e0 00000000 		.4byte	.LFB2
 1313 00e4 20000000 		.4byte	.LFE2-.LFB2
 1314 00e8 01       		.uleb128 0x1
 1315 00e9 9C       		.byte	0x9c
 1316 00ea 07       		.uleb128 0x7
 1317 00eb 8F030000 		.4byte	.LASF18
 1318 00ef 01       		.byte	0x1
 1319 00f0 D8       		.byte	0xd8
 1320 00f1 00000000 		.4byte	.LFB3
 1321 00f5 44000000 		.4byte	.LFE3-.LFB3
 1322 00f9 01       		.uleb128 0x1
 1323 00fa 9C       		.byte	0x9c
 1324 00fb 0E010000 		.4byte	0x10e
 1325 00ff 08       		.uleb128 0x8
 1326 0100 2A010000 		.4byte	.LASF19
 1327 0104 01       		.byte	0x1
 1328 0105 DA       		.byte	0xda
 1329 0106 6B000000 		.4byte	0x6b
 1330 010a 02       		.uleb128 0x2
 1331 010b 91       		.byte	0x91
 1332 010c 77       		.sleb128 -9
 1333 010d 00       		.byte	0
 1334 010e 09       		.uleb128 0x9
 1335 010f 5E010000 		.4byte	.LASF20
 1336 0113 01       		.byte	0x1
 1337 0114 FD       		.byte	0xfd
 1338 0115 00000000 		.4byte	.LFB4
 1339 0119 0C000000 		.4byte	.LFE4-.LFB4
 1340 011d 01       		.uleb128 0x1
 1341 011e 9C       		.byte	0x9c
 1342 011f 0A       		.uleb128 0xa
 1343 0120 0F010000 		.4byte	.LASF21
 1344 0124 01       		.byte	0x1
 1345 0125 1601     		.2byte	0x116
 1346 0127 00000000 		.4byte	.LFB5
 1347 012b 0C000000 		.4byte	.LFE5-.LFB5
 1348 012f 01       		.uleb128 0x1
 1349 0130 9C       		.byte	0x9c
 1350 0131 0A       		.uleb128 0xa
 1351 0132 76020000 		.4byte	.LASF22
 1352 0136 01       		.byte	0x1
 1353 0137 2F01     		.2byte	0x12f
 1354 0139 00000000 		.4byte	.LFB6
 1355 013d 0C000000 		.4byte	.LFE6-.LFB6
 1356 0141 01       		.uleb128 0x1
 1357 0142 9C       		.byte	0x9c
 1358 0143 0A       		.uleb128 0xa
 1359 0144 61000000 		.4byte	.LASF23
 1360 0148 01       		.byte	0x1
 1361 0149 4801     		.2byte	0x148
 1362 014b 00000000 		.4byte	.LFB7
 1363 014f 0C000000 		.4byte	.LFE7-.LFB7
 1364 0153 01       		.uleb128 0x1
 1365 0154 9C       		.byte	0x9c
 1366 0155 0B       		.uleb128 0xb
 1367 0156 99030000 		.4byte	.LASF24
 1368 015a 01       		.byte	0x1
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 47


 1369 015b 6201     		.2byte	0x162
 1370 015d 00000000 		.4byte	.LFB8
 1371 0161 20000000 		.4byte	.LFE8-.LFB8
 1372 0165 01       		.uleb128 0x1
 1373 0166 9C       		.byte	0x9c
 1374 0167 7B010000 		.4byte	0x17b
 1375 016b 0C       		.uleb128 0xc
 1376 016c 04020000 		.4byte	.LASF26
 1377 0170 01       		.byte	0x1
 1378 0171 6201     		.2byte	0x162
 1379 0173 6B000000 		.4byte	0x6b
 1380 0177 02       		.uleb128 0x2
 1381 0178 91       		.byte	0x91
 1382 0179 77       		.sleb128 -9
 1383 017a 00       		.byte	0
 1384 017b 0B       		.uleb128 0xb
 1385 017c BC030000 		.4byte	.LASF25
 1386 0180 01       		.byte	0x1
 1387 0181 7A01     		.2byte	0x17a
 1388 0183 00000000 		.4byte	.LFB9
 1389 0187 20000000 		.4byte	.LFE9-.LFB9
 1390 018b 01       		.uleb128 0x1
 1391 018c 9C       		.byte	0x9c
 1392 018d A1010000 		.4byte	0x1a1
 1393 0191 0C       		.uleb128 0xc
 1394 0192 04020000 		.4byte	.LASF26
 1395 0196 01       		.byte	0x1
 1396 0197 7A01     		.2byte	0x17a
 1397 0199 6B000000 		.4byte	0x6b
 1398 019d 02       		.uleb128 0x2
 1399 019e 91       		.byte	0x91
 1400 019f 77       		.sleb128 -9
 1401 01a0 00       		.byte	0
 1402 01a1 0D       		.uleb128 0xd
 1403 01a2 A6000000 		.4byte	.LASF28
 1404 01a6 01       		.byte	0x1
 1405 01a7 9C01     		.2byte	0x19c
 1406 01a9 6B000000 		.4byte	0x6b
 1407 01ad 00000000 		.4byte	.LFB10
 1408 01b1 20000000 		.4byte	.LFE10-.LFB10
 1409 01b5 01       		.uleb128 0x1
 1410 01b6 9C       		.byte	0x9c
 1411 01b7 CB010000 		.4byte	0x1cb
 1412 01bb 0E       		.uleb128 0xe
 1413 01bc 57030000 		.4byte	.LASF27
 1414 01c0 01       		.byte	0x1
 1415 01c1 9E01     		.2byte	0x19e
 1416 01c3 6B000000 		.4byte	0x6b
 1417 01c7 02       		.uleb128 0x2
 1418 01c8 91       		.byte	0x91
 1419 01c9 77       		.sleb128 -9
 1420 01ca 00       		.byte	0
 1421 01cb 0D       		.uleb128 0xd
 1422 01cc F7020000 		.4byte	.LASF29
 1423 01d0 01       		.byte	0x1
 1424 01d1 D101     		.2byte	0x1d1
 1425 01d3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 48


 1426 01d7 00000000 		.4byte	.LFB11
 1427 01db 20000000 		.4byte	.LFE11-.LFB11
 1428 01df 01       		.uleb128 0x1
 1429 01e0 9C       		.byte	0x9c
 1430 01e1 F5010000 		.4byte	0x1f5
 1431 01e5 0E       		.uleb128 0xe
 1432 01e6 57030000 		.4byte	.LASF27
 1433 01ea 01       		.byte	0x1
 1434 01eb D301     		.2byte	0x1d3
 1435 01ed 6B000000 		.4byte	0x6b
 1436 01f1 02       		.uleb128 0x2
 1437 01f2 91       		.byte	0x91
 1438 01f3 77       		.sleb128 -9
 1439 01f4 00       		.byte	0
 1440 01f5 0B       		.uleb128 0xb
 1441 01f6 50000000 		.4byte	.LASF30
 1442 01fa 01       		.byte	0x1
 1443 01fb 0C02     		.2byte	0x20c
 1444 01fd 00000000 		.4byte	.LFB12
 1445 0201 34000000 		.4byte	.LFE12-.LFB12
 1446 0205 01       		.uleb128 0x1
 1447 0206 9C       		.byte	0x9c
 1448 0207 1B020000 		.4byte	0x21b
 1449 020b 0C       		.uleb128 0xc
 1450 020c 91020000 		.4byte	.LASF31
 1451 0210 01       		.byte	0x1
 1452 0211 0C02     		.2byte	0x20c
 1453 0213 6B000000 		.4byte	0x6b
 1454 0217 02       		.uleb128 0x2
 1455 0218 91       		.byte	0x91
 1456 0219 77       		.sleb128 -9
 1457 021a 00       		.byte	0
 1458 021b 0B       		.uleb128 0xb
 1459 021c 00000000 		.4byte	.LASF32
 1460 0220 01       		.byte	0x1
 1461 0221 6B02     		.2byte	0x26b
 1462 0223 00000000 		.4byte	.LFB13
 1463 0227 20000000 		.4byte	.LFE13-.LFB13
 1464 022b 01       		.uleb128 0x1
 1465 022c 9C       		.byte	0x9c
 1466 022d 41020000 		.4byte	0x241
 1467 0231 0C       		.uleb128 0xc
 1468 0232 B1030000 		.4byte	.LASF33
 1469 0236 01       		.byte	0x1
 1470 0237 6B02     		.2byte	0x26b
 1471 0239 6B000000 		.4byte	0x6b
 1472 023d 02       		.uleb128 0x2
 1473 023e 91       		.byte	0x91
 1474 023f 77       		.sleb128 -9
 1475 0240 00       		.byte	0
 1476 0241 0D       		.uleb128 0xd
 1477 0242 83000000 		.4byte	.LASF34
 1478 0246 01       		.byte	0x1
 1479 0247 9502     		.2byte	0x295
 1480 0249 6B000000 		.4byte	0x6b
 1481 024d 00000000 		.4byte	.LFB14
 1482 0251 20000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 49


 1483 0255 01       		.uleb128 0x1
 1484 0256 9C       		.byte	0x9c
 1485 0257 6B020000 		.4byte	0x26b
 1486 025b 0E       		.uleb128 0xe
 1487 025c CB000000 		.4byte	.LASF35
 1488 0260 01       		.byte	0x1
 1489 0261 9702     		.2byte	0x297
 1490 0263 6B000000 		.4byte	0x6b
 1491 0267 02       		.uleb128 0x2
 1492 0268 91       		.byte	0x91
 1493 0269 77       		.sleb128 -9
 1494 026a 00       		.byte	0
 1495 026b 0D       		.uleb128 0xd
 1496 026c 3B010000 		.4byte	.LASF36
 1497 0270 01       		.byte	0x1
 1498 0271 D702     		.2byte	0x2d7
 1499 0273 6B000000 		.4byte	0x6b
 1500 0277 00000000 		.4byte	.LFB15
 1501 027b 30000000 		.4byte	.LFE15-.LFB15
 1502 027f 01       		.uleb128 0x1
 1503 0280 9C       		.byte	0x9c
 1504 0281 95020000 		.4byte	0x295
 1505 0285 0E       		.uleb128 0xe
 1506 0286 ED000000 		.4byte	.LASF37
 1507 028a 01       		.byte	0x1
 1508 028b D902     		.2byte	0x2d9
 1509 028d 6B000000 		.4byte	0x6b
 1510 0291 02       		.uleb128 0x2
 1511 0292 91       		.byte	0x91
 1512 0293 77       		.sleb128 -9
 1513 0294 00       		.byte	0
 1514 0295 0D       		.uleb128 0xd
 1515 0296 D2000000 		.4byte	.LASF38
 1516 029a 01       		.byte	0x1
 1517 029b 1803     		.2byte	0x318
 1518 029d 6B000000 		.4byte	0x6b
 1519 02a1 00000000 		.4byte	.LFB16
 1520 02a5 44000000 		.4byte	.LFE16-.LFB16
 1521 02a9 01       		.uleb128 0x1
 1522 02aa 9C       		.byte	0x9c
 1523 02ab BF020000 		.4byte	0x2bf
 1524 02af 0E       		.uleb128 0xe
 1525 02b0 ED000000 		.4byte	.LASF37
 1526 02b4 01       		.byte	0x1
 1527 02b5 1A03     		.2byte	0x31a
 1528 02b7 6B000000 		.4byte	0x6b
 1529 02bb 02       		.uleb128 0x2
 1530 02bc 91       		.byte	0x91
 1531 02bd 77       		.sleb128 -9
 1532 02be 00       		.byte	0
 1533 02bf 0A       		.uleb128 0xa
 1534 02c0 B8000000 		.4byte	.LASF39
 1535 02c4 01       		.byte	0x1
 1536 02c5 6A03     		.2byte	0x36a
 1537 02c7 00000000 		.4byte	.LFB17
 1538 02cb 28000000 		.4byte	.LFE17-.LFB17
 1539 02cf 01       		.uleb128 0x1
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 50


 1540 02d0 9C       		.byte	0x9c
 1541 02d1 0F       		.uleb128 0xf
 1542 02d2 93000000 		.4byte	.LASF40
 1543 02d6 01       		.byte	0x1
 1544 02d7 A303     		.2byte	0x3a3
 1545 02d9 00000000 		.4byte	.LFB18
 1546 02dd 40000000 		.4byte	.LFE18-.LFB18
 1547 02e1 01       		.uleb128 0x1
 1548 02e2 9C       		.byte	0x9c
 1549 02e3 F7020000 		.4byte	0x2f7
 1550 02e7 0E       		.uleb128 0xe
 1551 02e8 2A010000 		.4byte	.LASF19
 1552 02ec 01       		.byte	0x1
 1553 02ed A503     		.2byte	0x3a5
 1554 02ef 6B000000 		.4byte	0x6b
 1555 02f3 02       		.uleb128 0x2
 1556 02f4 91       		.byte	0x91
 1557 02f5 77       		.sleb128 -9
 1558 02f6 00       		.byte	0
 1559 02f7 0F       		.uleb128 0xf
 1560 02f8 0B020000 		.4byte	.LASF41
 1561 02fc 01       		.byte	0x1
 1562 02fd 1704     		.2byte	0x417
 1563 02ff 00000000 		.4byte	.LFB19
 1564 0303 38000000 		.4byte	.LFE19-.LFB19
 1565 0307 01       		.uleb128 0x1
 1566 0308 9C       		.byte	0x9c
 1567 0309 3B030000 		.4byte	0x33b
 1568 030d 0C       		.uleb128 0xc
 1569 030e 37030000 		.4byte	.LASF42
 1570 0312 01       		.byte	0x1
 1571 0313 1704     		.2byte	0x417
 1572 0315 3B030000 		.4byte	0x33b
 1573 0319 02       		.uleb128 0x2
 1574 031a 91       		.byte	0x91
 1575 031b 6C       		.sleb128 -20
 1576 031c 0C       		.uleb128 0xc
 1577 031d 20010000 		.4byte	.LASF43
 1578 0321 01       		.byte	0x1
 1579 0322 1704     		.2byte	0x417
 1580 0324 6B000000 		.4byte	0x6b
 1581 0328 02       		.uleb128 0x2
 1582 0329 91       		.byte	0x91
 1583 032a 6B       		.sleb128 -21
 1584 032b 0E       		.uleb128 0xe
 1585 032c 88020000 		.4byte	.LASF44
 1586 0330 01       		.byte	0x1
 1587 0331 1A04     		.2byte	0x41a
 1588 0333 6B000000 		.4byte	0x6b
 1589 0337 02       		.uleb128 0x2
 1590 0338 91       		.byte	0x91
 1591 0339 77       		.sleb128 -9
 1592 033a 00       		.byte	0
 1593 033b 10       		.uleb128 0x10
 1594 033c 04       		.byte	0x4
 1595 033d 41030000 		.4byte	0x341
 1596 0341 11       		.uleb128 0x11
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 51


 1597 0342 6B000000 		.4byte	0x6b
 1598 0346 0F       		.uleb128 0xf
 1599 0347 61030000 		.4byte	.LASF45
 1600 034b 01       		.byte	0x1
 1601 034c 3704     		.2byte	0x437
 1602 034e 00000000 		.4byte	.LFB20
 1603 0352 5C000000 		.4byte	.LFE20-.LFB20
 1604 0356 01       		.uleb128 0x1
 1605 0357 9C       		.byte	0x9c
 1606 0358 6C030000 		.4byte	0x36c
 1607 035c 0E       		.uleb128 0xe
 1608 035d 2A010000 		.4byte	.LASF19
 1609 0361 01       		.byte	0x1
 1610 0362 3904     		.2byte	0x439
 1611 0364 6B000000 		.4byte	0x6b
 1612 0368 02       		.uleb128 0x2
 1613 0369 91       		.byte	0x91
 1614 036a 77       		.sleb128 -9
 1615 036b 00       		.byte	0
 1616 036c 0A       		.uleb128 0xa
 1617 036d 28030000 		.4byte	.LASF46
 1618 0371 01       		.byte	0x1
 1619 0372 6C04     		.2byte	0x46c
 1620 0374 00000000 		.4byte	.LFB21
 1621 0378 0C000000 		.4byte	.LFE21-.LFB21
 1622 037c 01       		.uleb128 0x1
 1623 037d 9C       		.byte	0x9c
 1624 037e 0A       		.uleb128 0xa
 1625 037f 09030000 		.4byte	.LASF47
 1626 0383 01       		.byte	0x1
 1627 0384 8904     		.2byte	0x489
 1628 0386 00000000 		.4byte	.LFB22
 1629 038a 0C000000 		.4byte	.LFE22-.LFB22
 1630 038e 01       		.uleb128 0x1
 1631 038f 9C       		.byte	0x9c
 1632 0390 0B       		.uleb128 0xb
 1633 0391 25020000 		.4byte	.LASF48
 1634 0395 01       		.byte	0x1
 1635 0396 A704     		.2byte	0x4a7
 1636 0398 00000000 		.4byte	.LFB23
 1637 039c 28000000 		.4byte	.LFE23-.LFB23
 1638 03a0 01       		.uleb128 0x1
 1639 03a1 9C       		.byte	0x9c
 1640 03a2 B6030000 		.4byte	0x3b6
 1641 03a6 0C       		.uleb128 0xc
 1642 03a7 04020000 		.4byte	.LASF26
 1643 03ab 01       		.byte	0x1
 1644 03ac A704     		.2byte	0x4a7
 1645 03ae 6B000000 		.4byte	0x6b
 1646 03b2 02       		.uleb128 0x2
 1647 03b3 91       		.byte	0x91
 1648 03b4 77       		.sleb128 -9
 1649 03b5 00       		.byte	0
 1650 03b6 0D       		.uleb128 0xd
 1651 03b7 3E030000 		.4byte	.LASF49
 1652 03bb 01       		.byte	0x1
 1653 03bc CA04     		.2byte	0x4ca
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 52


 1654 03be 6B000000 		.4byte	0x6b
 1655 03c2 00000000 		.4byte	.LFB24
 1656 03c6 38000000 		.4byte	.LFE24-.LFB24
 1657 03ca 01       		.uleb128 0x1
 1658 03cb 9C       		.byte	0x9c
 1659 03cc E0030000 		.4byte	0x3e0
 1660 03d0 0E       		.uleb128 0xe
 1661 03d1 57030000 		.4byte	.LASF27
 1662 03d5 01       		.byte	0x1
 1663 03d6 CC04     		.2byte	0x4cc
 1664 03d8 6B000000 		.4byte	0x6b
 1665 03dc 02       		.uleb128 0x2
 1666 03dd 91       		.byte	0x91
 1667 03de 77       		.sleb128 -9
 1668 03df 00       		.byte	0
 1669 03e0 12       		.uleb128 0x12
 1670 03e1 3B020000 		.4byte	.LASF50
 1671 03e5 01       		.byte	0x1
 1672 03e6 26       		.byte	0x26
 1673 03e7 6B000000 		.4byte	0x6b
 1674 03eb 05       		.uleb128 0x5
 1675 03ec 03       		.byte	0x3
 1676 03ed 00000000 		.4byte	SPIS_initVar
 1677 03f1 12       		.uleb128 0x12
 1678 03f2 73000000 		.4byte	.LASF51
 1679 03f6 01       		.byte	0x1
 1680 03f7 28       		.byte	0x28
 1681 03f8 98000000 		.4byte	0x98
 1682 03fc 05       		.uleb128 0x5
 1683 03fd 03       		.byte	0x3
 1684 03fe 00000000 		.4byte	SPIS_swStatusTx
 1685 0402 12       		.uleb128 0x12
 1686 0403 40000000 		.4byte	.LASF52
 1687 0407 01       		.byte	0x1
 1688 0408 29       		.byte	0x29
 1689 0409 98000000 		.4byte	0x98
 1690 040d 05       		.uleb128 0x5
 1691 040e 03       		.byte	0x3
 1692 040f 00000000 		.4byte	SPIS_swStatusRx
 1693 0413 00       		.byte	0
 1694              		.section	.debug_abbrev,"",%progbits
 1695              	.Ldebug_abbrev0:
 1696 0000 01       		.uleb128 0x1
 1697 0001 11       		.uleb128 0x11
 1698 0002 01       		.byte	0x1
 1699 0003 25       		.uleb128 0x25
 1700 0004 0E       		.uleb128 0xe
 1701 0005 13       		.uleb128 0x13
 1702 0006 0B       		.uleb128 0xb
 1703 0007 03       		.uleb128 0x3
 1704 0008 0E       		.uleb128 0xe
 1705 0009 1B       		.uleb128 0x1b
 1706 000a 0E       		.uleb128 0xe
 1707 000b 55       		.uleb128 0x55
 1708 000c 17       		.uleb128 0x17
 1709 000d 11       		.uleb128 0x11
 1710 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 53


 1711 000f 10       		.uleb128 0x10
 1712 0010 17       		.uleb128 0x17
 1713 0011 00       		.byte	0
 1714 0012 00       		.byte	0
 1715 0013 02       		.uleb128 0x2
 1716 0014 24       		.uleb128 0x24
 1717 0015 00       		.byte	0
 1718 0016 0B       		.uleb128 0xb
 1719 0017 0B       		.uleb128 0xb
 1720 0018 3E       		.uleb128 0x3e
 1721 0019 0B       		.uleb128 0xb
 1722 001a 03       		.uleb128 0x3
 1723 001b 0E       		.uleb128 0xe
 1724 001c 00       		.byte	0
 1725 001d 00       		.byte	0
 1726 001e 03       		.uleb128 0x3
 1727 001f 24       		.uleb128 0x24
 1728 0020 00       		.byte	0
 1729 0021 0B       		.uleb128 0xb
 1730 0022 0B       		.uleb128 0xb
 1731 0023 3E       		.uleb128 0x3e
 1732 0024 0B       		.uleb128 0xb
 1733 0025 03       		.uleb128 0x3
 1734 0026 08       		.uleb128 0x8
 1735 0027 00       		.byte	0
 1736 0028 00       		.byte	0
 1737 0029 04       		.uleb128 0x4
 1738 002a 16       		.uleb128 0x16
 1739 002b 00       		.byte	0
 1740 002c 03       		.uleb128 0x3
 1741 002d 0E       		.uleb128 0xe
 1742 002e 3A       		.uleb128 0x3a
 1743 002f 0B       		.uleb128 0xb
 1744 0030 3B       		.uleb128 0x3b
 1745 0031 05       		.uleb128 0x5
 1746 0032 49       		.uleb128 0x49
 1747 0033 13       		.uleb128 0x13
 1748 0034 00       		.byte	0
 1749 0035 00       		.byte	0
 1750 0036 05       		.uleb128 0x5
 1751 0037 35       		.uleb128 0x35
 1752 0038 00       		.byte	0
 1753 0039 49       		.uleb128 0x49
 1754 003a 13       		.uleb128 0x13
 1755 003b 00       		.byte	0
 1756 003c 00       		.byte	0
 1757 003d 06       		.uleb128 0x6
 1758 003e 2E       		.uleb128 0x2e
 1759 003f 00       		.byte	0
 1760 0040 3F       		.uleb128 0x3f
 1761 0041 19       		.uleb128 0x19
 1762 0042 03       		.uleb128 0x3
 1763 0043 0E       		.uleb128 0xe
 1764 0044 3A       		.uleb128 0x3a
 1765 0045 0B       		.uleb128 0xb
 1766 0046 3B       		.uleb128 0x3b
 1767 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 54


 1768 0048 27       		.uleb128 0x27
 1769 0049 19       		.uleb128 0x19
 1770 004a 11       		.uleb128 0x11
 1771 004b 01       		.uleb128 0x1
 1772 004c 12       		.uleb128 0x12
 1773 004d 06       		.uleb128 0x6
 1774 004e 40       		.uleb128 0x40
 1775 004f 18       		.uleb128 0x18
 1776 0050 9642     		.uleb128 0x2116
 1777 0052 19       		.uleb128 0x19
 1778 0053 00       		.byte	0
 1779 0054 00       		.byte	0
 1780 0055 07       		.uleb128 0x7
 1781 0056 2E       		.uleb128 0x2e
 1782 0057 01       		.byte	0x1
 1783 0058 3F       		.uleb128 0x3f
 1784 0059 19       		.uleb128 0x19
 1785 005a 03       		.uleb128 0x3
 1786 005b 0E       		.uleb128 0xe
 1787 005c 3A       		.uleb128 0x3a
 1788 005d 0B       		.uleb128 0xb
 1789 005e 3B       		.uleb128 0x3b
 1790 005f 0B       		.uleb128 0xb
 1791 0060 27       		.uleb128 0x27
 1792 0061 19       		.uleb128 0x19
 1793 0062 11       		.uleb128 0x11
 1794 0063 01       		.uleb128 0x1
 1795 0064 12       		.uleb128 0x12
 1796 0065 06       		.uleb128 0x6
 1797 0066 40       		.uleb128 0x40
 1798 0067 18       		.uleb128 0x18
 1799 0068 9642     		.uleb128 0x2116
 1800 006a 19       		.uleb128 0x19
 1801 006b 01       		.uleb128 0x1
 1802 006c 13       		.uleb128 0x13
 1803 006d 00       		.byte	0
 1804 006e 00       		.byte	0
 1805 006f 08       		.uleb128 0x8
 1806 0070 34       		.uleb128 0x34
 1807 0071 00       		.byte	0
 1808 0072 03       		.uleb128 0x3
 1809 0073 0E       		.uleb128 0xe
 1810 0074 3A       		.uleb128 0x3a
 1811 0075 0B       		.uleb128 0xb
 1812 0076 3B       		.uleb128 0x3b
 1813 0077 0B       		.uleb128 0xb
 1814 0078 49       		.uleb128 0x49
 1815 0079 13       		.uleb128 0x13
 1816 007a 02       		.uleb128 0x2
 1817 007b 18       		.uleb128 0x18
 1818 007c 00       		.byte	0
 1819 007d 00       		.byte	0
 1820 007e 09       		.uleb128 0x9
 1821 007f 2E       		.uleb128 0x2e
 1822 0080 00       		.byte	0
 1823 0081 3F       		.uleb128 0x3f
 1824 0082 19       		.uleb128 0x19
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 55


 1825 0083 03       		.uleb128 0x3
 1826 0084 0E       		.uleb128 0xe
 1827 0085 3A       		.uleb128 0x3a
 1828 0086 0B       		.uleb128 0xb
 1829 0087 3B       		.uleb128 0x3b
 1830 0088 0B       		.uleb128 0xb
 1831 0089 27       		.uleb128 0x27
 1832 008a 19       		.uleb128 0x19
 1833 008b 11       		.uleb128 0x11
 1834 008c 01       		.uleb128 0x1
 1835 008d 12       		.uleb128 0x12
 1836 008e 06       		.uleb128 0x6
 1837 008f 40       		.uleb128 0x40
 1838 0090 18       		.uleb128 0x18
 1839 0091 9742     		.uleb128 0x2117
 1840 0093 19       		.uleb128 0x19
 1841 0094 00       		.byte	0
 1842 0095 00       		.byte	0
 1843 0096 0A       		.uleb128 0xa
 1844 0097 2E       		.uleb128 0x2e
 1845 0098 00       		.byte	0
 1846 0099 3F       		.uleb128 0x3f
 1847 009a 19       		.uleb128 0x19
 1848 009b 03       		.uleb128 0x3
 1849 009c 0E       		.uleb128 0xe
 1850 009d 3A       		.uleb128 0x3a
 1851 009e 0B       		.uleb128 0xb
 1852 009f 3B       		.uleb128 0x3b
 1853 00a0 05       		.uleb128 0x5
 1854 00a1 27       		.uleb128 0x27
 1855 00a2 19       		.uleb128 0x19
 1856 00a3 11       		.uleb128 0x11
 1857 00a4 01       		.uleb128 0x1
 1858 00a5 12       		.uleb128 0x12
 1859 00a6 06       		.uleb128 0x6
 1860 00a7 40       		.uleb128 0x40
 1861 00a8 18       		.uleb128 0x18
 1862 00a9 9742     		.uleb128 0x2117
 1863 00ab 19       		.uleb128 0x19
 1864 00ac 00       		.byte	0
 1865 00ad 00       		.byte	0
 1866 00ae 0B       		.uleb128 0xb
 1867 00af 2E       		.uleb128 0x2e
 1868 00b0 01       		.byte	0x1
 1869 00b1 3F       		.uleb128 0x3f
 1870 00b2 19       		.uleb128 0x19
 1871 00b3 03       		.uleb128 0x3
 1872 00b4 0E       		.uleb128 0xe
 1873 00b5 3A       		.uleb128 0x3a
 1874 00b6 0B       		.uleb128 0xb
 1875 00b7 3B       		.uleb128 0x3b
 1876 00b8 05       		.uleb128 0x5
 1877 00b9 27       		.uleb128 0x27
 1878 00ba 19       		.uleb128 0x19
 1879 00bb 11       		.uleb128 0x11
 1880 00bc 01       		.uleb128 0x1
 1881 00bd 12       		.uleb128 0x12
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 56


 1882 00be 06       		.uleb128 0x6
 1883 00bf 40       		.uleb128 0x40
 1884 00c0 18       		.uleb128 0x18
 1885 00c1 9742     		.uleb128 0x2117
 1886 00c3 19       		.uleb128 0x19
 1887 00c4 01       		.uleb128 0x1
 1888 00c5 13       		.uleb128 0x13
 1889 00c6 00       		.byte	0
 1890 00c7 00       		.byte	0
 1891 00c8 0C       		.uleb128 0xc
 1892 00c9 05       		.uleb128 0x5
 1893 00ca 00       		.byte	0
 1894 00cb 03       		.uleb128 0x3
 1895 00cc 0E       		.uleb128 0xe
 1896 00cd 3A       		.uleb128 0x3a
 1897 00ce 0B       		.uleb128 0xb
 1898 00cf 3B       		.uleb128 0x3b
 1899 00d0 05       		.uleb128 0x5
 1900 00d1 49       		.uleb128 0x49
 1901 00d2 13       		.uleb128 0x13
 1902 00d3 02       		.uleb128 0x2
 1903 00d4 18       		.uleb128 0x18
 1904 00d5 00       		.byte	0
 1905 00d6 00       		.byte	0
 1906 00d7 0D       		.uleb128 0xd
 1907 00d8 2E       		.uleb128 0x2e
 1908 00d9 01       		.byte	0x1
 1909 00da 3F       		.uleb128 0x3f
 1910 00db 19       		.uleb128 0x19
 1911 00dc 03       		.uleb128 0x3
 1912 00dd 0E       		.uleb128 0xe
 1913 00de 3A       		.uleb128 0x3a
 1914 00df 0B       		.uleb128 0xb
 1915 00e0 3B       		.uleb128 0x3b
 1916 00e1 05       		.uleb128 0x5
 1917 00e2 27       		.uleb128 0x27
 1918 00e3 19       		.uleb128 0x19
 1919 00e4 49       		.uleb128 0x49
 1920 00e5 13       		.uleb128 0x13
 1921 00e6 11       		.uleb128 0x11
 1922 00e7 01       		.uleb128 0x1
 1923 00e8 12       		.uleb128 0x12
 1924 00e9 06       		.uleb128 0x6
 1925 00ea 40       		.uleb128 0x40
 1926 00eb 18       		.uleb128 0x18
 1927 00ec 9742     		.uleb128 0x2117
 1928 00ee 19       		.uleb128 0x19
 1929 00ef 01       		.uleb128 0x1
 1930 00f0 13       		.uleb128 0x13
 1931 00f1 00       		.byte	0
 1932 00f2 00       		.byte	0
 1933 00f3 0E       		.uleb128 0xe
 1934 00f4 34       		.uleb128 0x34
 1935 00f5 00       		.byte	0
 1936 00f6 03       		.uleb128 0x3
 1937 00f7 0E       		.uleb128 0xe
 1938 00f8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 57


 1939 00f9 0B       		.uleb128 0xb
 1940 00fa 3B       		.uleb128 0x3b
 1941 00fb 05       		.uleb128 0x5
 1942 00fc 49       		.uleb128 0x49
 1943 00fd 13       		.uleb128 0x13
 1944 00fe 02       		.uleb128 0x2
 1945 00ff 18       		.uleb128 0x18
 1946 0100 00       		.byte	0
 1947 0101 00       		.byte	0
 1948 0102 0F       		.uleb128 0xf
 1949 0103 2E       		.uleb128 0x2e
 1950 0104 01       		.byte	0x1
 1951 0105 3F       		.uleb128 0x3f
 1952 0106 19       		.uleb128 0x19
 1953 0107 03       		.uleb128 0x3
 1954 0108 0E       		.uleb128 0xe
 1955 0109 3A       		.uleb128 0x3a
 1956 010a 0B       		.uleb128 0xb
 1957 010b 3B       		.uleb128 0x3b
 1958 010c 05       		.uleb128 0x5
 1959 010d 27       		.uleb128 0x27
 1960 010e 19       		.uleb128 0x19
 1961 010f 11       		.uleb128 0x11
 1962 0110 01       		.uleb128 0x1
 1963 0111 12       		.uleb128 0x12
 1964 0112 06       		.uleb128 0x6
 1965 0113 40       		.uleb128 0x40
 1966 0114 18       		.uleb128 0x18
 1967 0115 9642     		.uleb128 0x2116
 1968 0117 19       		.uleb128 0x19
 1969 0118 01       		.uleb128 0x1
 1970 0119 13       		.uleb128 0x13
 1971 011a 00       		.byte	0
 1972 011b 00       		.byte	0
 1973 011c 10       		.uleb128 0x10
 1974 011d 0F       		.uleb128 0xf
 1975 011e 00       		.byte	0
 1976 011f 0B       		.uleb128 0xb
 1977 0120 0B       		.uleb128 0xb
 1978 0121 49       		.uleb128 0x49
 1979 0122 13       		.uleb128 0x13
 1980 0123 00       		.byte	0
 1981 0124 00       		.byte	0
 1982 0125 11       		.uleb128 0x11
 1983 0126 26       		.uleb128 0x26
 1984 0127 00       		.byte	0
 1985 0128 49       		.uleb128 0x49
 1986 0129 13       		.uleb128 0x13
 1987 012a 00       		.byte	0
 1988 012b 00       		.byte	0
 1989 012c 12       		.uleb128 0x12
 1990 012d 34       		.uleb128 0x34
 1991 012e 00       		.byte	0
 1992 012f 03       		.uleb128 0x3
 1993 0130 0E       		.uleb128 0xe
 1994 0131 3A       		.uleb128 0x3a
 1995 0132 0B       		.uleb128 0xb
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 58


 1996 0133 3B       		.uleb128 0x3b
 1997 0134 0B       		.uleb128 0xb
 1998 0135 49       		.uleb128 0x49
 1999 0136 13       		.uleb128 0x13
 2000 0137 3F       		.uleb128 0x3f
 2001 0138 19       		.uleb128 0x19
 2002 0139 02       		.uleb128 0x2
 2003 013a 18       		.uleb128 0x18
 2004 013b 00       		.byte	0
 2005 013c 00       		.byte	0
 2006 013d 00       		.byte	0
 2007              		.section	.debug_aranges,"",%progbits
 2008 0000 DC000000 		.4byte	0xdc
 2009 0004 0200     		.2byte	0x2
 2010 0006 00000000 		.4byte	.Ldebug_info0
 2011 000a 04       		.byte	0x4
 2012 000b 00       		.byte	0
 2013 000c 0000     		.2byte	0
 2014 000e 0000     		.2byte	0
 2015 0010 00000000 		.4byte	.LFB0
 2016 0014 30000000 		.4byte	.LFE0-.LFB0
 2017 0018 00000000 		.4byte	.LFB1
 2018 001c 58000000 		.4byte	.LFE1-.LFB1
 2019 0020 00000000 		.4byte	.LFB2
 2020 0024 20000000 		.4byte	.LFE2-.LFB2
 2021 0028 00000000 		.4byte	.LFB3
 2022 002c 44000000 		.4byte	.LFE3-.LFB3
 2023 0030 00000000 		.4byte	.LFB4
 2024 0034 0C000000 		.4byte	.LFE4-.LFB4
 2025 0038 00000000 		.4byte	.LFB5
 2026 003c 0C000000 		.4byte	.LFE5-.LFB5
 2027 0040 00000000 		.4byte	.LFB6
 2028 0044 0C000000 		.4byte	.LFE6-.LFB6
 2029 0048 00000000 		.4byte	.LFB7
 2030 004c 0C000000 		.4byte	.LFE7-.LFB7
 2031 0050 00000000 		.4byte	.LFB8
 2032 0054 20000000 		.4byte	.LFE8-.LFB8
 2033 0058 00000000 		.4byte	.LFB9
 2034 005c 20000000 		.4byte	.LFE9-.LFB9
 2035 0060 00000000 		.4byte	.LFB10
 2036 0064 20000000 		.4byte	.LFE10-.LFB10
 2037 0068 00000000 		.4byte	.LFB11
 2038 006c 20000000 		.4byte	.LFE11-.LFB11
 2039 0070 00000000 		.4byte	.LFB12
 2040 0074 34000000 		.4byte	.LFE12-.LFB12
 2041 0078 00000000 		.4byte	.LFB13
 2042 007c 20000000 		.4byte	.LFE13-.LFB13
 2043 0080 00000000 		.4byte	.LFB14
 2044 0084 20000000 		.4byte	.LFE14-.LFB14
 2045 0088 00000000 		.4byte	.LFB15
 2046 008c 30000000 		.4byte	.LFE15-.LFB15
 2047 0090 00000000 		.4byte	.LFB16
 2048 0094 44000000 		.4byte	.LFE16-.LFB16
 2049 0098 00000000 		.4byte	.LFB17
 2050 009c 28000000 		.4byte	.LFE17-.LFB17
 2051 00a0 00000000 		.4byte	.LFB18
 2052 00a4 40000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 59


 2053 00a8 00000000 		.4byte	.LFB19
 2054 00ac 38000000 		.4byte	.LFE19-.LFB19
 2055 00b0 00000000 		.4byte	.LFB20
 2056 00b4 5C000000 		.4byte	.LFE20-.LFB20
 2057 00b8 00000000 		.4byte	.LFB21
 2058 00bc 0C000000 		.4byte	.LFE21-.LFB21
 2059 00c0 00000000 		.4byte	.LFB22
 2060 00c4 0C000000 		.4byte	.LFE22-.LFB22
 2061 00c8 00000000 		.4byte	.LFB23
 2062 00cc 28000000 		.4byte	.LFE23-.LFB23
 2063 00d0 00000000 		.4byte	.LFB24
 2064 00d4 38000000 		.4byte	.LFE24-.LFB24
 2065 00d8 00000000 		.4byte	0
 2066 00dc 00000000 		.4byte	0
 2067              		.section	.debug_ranges,"",%progbits
 2068              	.Ldebug_ranges0:
 2069 0000 00000000 		.4byte	.LFB0
 2070 0004 30000000 		.4byte	.LFE0
 2071 0008 00000000 		.4byte	.LFB1
 2072 000c 58000000 		.4byte	.LFE1
 2073 0010 00000000 		.4byte	.LFB2
 2074 0014 20000000 		.4byte	.LFE2
 2075 0018 00000000 		.4byte	.LFB3
 2076 001c 44000000 		.4byte	.LFE3
 2077 0020 00000000 		.4byte	.LFB4
 2078 0024 0C000000 		.4byte	.LFE4
 2079 0028 00000000 		.4byte	.LFB5
 2080 002c 0C000000 		.4byte	.LFE5
 2081 0030 00000000 		.4byte	.LFB6
 2082 0034 0C000000 		.4byte	.LFE6
 2083 0038 00000000 		.4byte	.LFB7
 2084 003c 0C000000 		.4byte	.LFE7
 2085 0040 00000000 		.4byte	.LFB8
 2086 0044 20000000 		.4byte	.LFE8
 2087 0048 00000000 		.4byte	.LFB9
 2088 004c 20000000 		.4byte	.LFE9
 2089 0050 00000000 		.4byte	.LFB10
 2090 0054 20000000 		.4byte	.LFE10
 2091 0058 00000000 		.4byte	.LFB11
 2092 005c 20000000 		.4byte	.LFE11
 2093 0060 00000000 		.4byte	.LFB12
 2094 0064 34000000 		.4byte	.LFE12
 2095 0068 00000000 		.4byte	.LFB13
 2096 006c 20000000 		.4byte	.LFE13
 2097 0070 00000000 		.4byte	.LFB14
 2098 0074 20000000 		.4byte	.LFE14
 2099 0078 00000000 		.4byte	.LFB15
 2100 007c 30000000 		.4byte	.LFE15
 2101 0080 00000000 		.4byte	.LFB16
 2102 0084 44000000 		.4byte	.LFE16
 2103 0088 00000000 		.4byte	.LFB17
 2104 008c 28000000 		.4byte	.LFE17
 2105 0090 00000000 		.4byte	.LFB18
 2106 0094 40000000 		.4byte	.LFE18
 2107 0098 00000000 		.4byte	.LFB19
 2108 009c 38000000 		.4byte	.LFE19
 2109 00a0 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 60


 2110 00a4 5C000000 		.4byte	.LFE20
 2111 00a8 00000000 		.4byte	.LFB21
 2112 00ac 0C000000 		.4byte	.LFE21
 2113 00b0 00000000 		.4byte	.LFB22
 2114 00b4 0C000000 		.4byte	.LFE22
 2115 00b8 00000000 		.4byte	.LFB23
 2116 00bc 28000000 		.4byte	.LFE23
 2117 00c0 00000000 		.4byte	.LFB24
 2118 00c4 38000000 		.4byte	.LFE24
 2119 00c8 00000000 		.4byte	0
 2120 00cc 00000000 		.4byte	0
 2121              		.section	.debug_line,"",%progbits
 2122              	.Ldebug_line0:
 2123 0000 6F020000 		.section	.debug_str,"MS",%progbits,1
 2123      02004300 
 2123      00000201 
 2123      FB0E0D00 
 2123      01010101 
 2124              	.LASF32:
 2125 0000 53504953 		.ascii	"SPIS_WriteTxDataZero\000"
 2125      5F577269 
 2125      74655478 
 2125      44617461 
 2125      5A65726F 
 2126              	.LASF16:
 2127 0015 53504953 		.ascii	"SPIS_Start\000"
 2127      5F537461 
 2127      727400
 2128              	.LASF54:
 2129 0020 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\SPIS.c\000"
 2129      6E657261 
 2129      7465645F 
 2129      536F7572 
 2129      63655C50 
 2130              	.LASF52:
 2131 0040 53504953 		.ascii	"SPIS_swStatusRx\000"
 2131      5F737753 
 2131      74617475 
 2131      73527800 
 2132              	.LASF30:
 2133 0050 53504953 		.ascii	"SPIS_WriteTxData\000"
 2133      5F577269 
 2133      74655478 
 2133      44617461 
 2133      00
 2134              	.LASF23:
 2135 0061 53504953 		.ascii	"SPIS_DisableRxInt\000"
 2135      5F446973 
 2135      61626C65 
 2135      5278496E 
 2135      7400
 2136              	.LASF51:
 2137 0073 53504953 		.ascii	"SPIS_swStatusTx\000"
 2137      5F737753 
 2137      74617475 
 2137      73547800 
 2138              	.LASF34:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 61


 2139 0083 53504953 		.ascii	"SPIS_ReadRxData\000"
 2139      5F526561 
 2139      64527844 
 2139      61746100 
 2140              	.LASF40:
 2141 0093 53504953 		.ascii	"SPIS_ClearTxBuffer\000"
 2141      5F436C65 
 2141      61725478 
 2141      42756666 
 2141      657200
 2142              	.LASF28:
 2143 00a6 53504953 		.ascii	"SPIS_ReadTxStatus\000"
 2143      5F526561 
 2143      64547853 
 2143      74617475 
 2143      7300
 2144              	.LASF39:
 2145 00b8 53504953 		.ascii	"SPIS_ClearRxBuffer\000"
 2145      5F436C65 
 2145      61725278 
 2145      42756666 
 2145      657200
 2146              	.LASF35:
 2147 00cb 72784461 		.ascii	"rxData\000"
 2147      746100
 2148              	.LASF38:
 2149 00d2 53504953 		.ascii	"SPIS_GetTxBufferSize\000"
 2149      5F476574 
 2149      54784275 
 2149      66666572 
 2149      53697A65 
 2150              	.LASF9:
 2151 00e7 666C6F61 		.ascii	"float\000"
 2151      7400
 2152              	.LASF37:
 2153 00ed 73697A65 		.ascii	"size\000"
 2153      00
 2154              	.LASF13:
 2155 00f2 72656738 		.ascii	"reg8\000"
 2155      00
 2156              	.LASF5:
 2157 00f7 6C6F6E67 		.ascii	"long unsigned int\000"
 2157      20756E73 
 2157      69676E65 
 2157      6420696E 
 2157      7400
 2158              	.LASF12:
 2159 0109 75696E74 		.ascii	"uint8\000"
 2159      3800
 2160              	.LASF21:
 2161 010f 53504953 		.ascii	"SPIS_EnableRxInt\000"
 2161      5F456E61 
 2161      626C6552 
 2161      78496E74 
 2161      00
 2162              	.LASF43:
 2163 0120 62797465 		.ascii	"byteCount\000"
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 62


 2163      436F756E 
 2163      7400
 2164              	.LASF19:
 2165 012a 656E6162 		.ascii	"enableInterrupts\000"
 2165      6C65496E 
 2165      74657272 
 2165      75707473 
 2165      00
 2166              	.LASF36:
 2167 013b 53504953 		.ascii	"SPIS_GetRxBufferSize\000"
 2167      5F476574 
 2167      52784275 
 2167      66666572 
 2167      53697A65 
 2168              	.LASF1:
 2169 0150 756E7369 		.ascii	"unsigned char\000"
 2169      676E6564 
 2169      20636861 
 2169      7200
 2170              	.LASF20:
 2171 015e 53504953 		.ascii	"SPIS_EnableTxInt\000"
 2171      5F456E61 
 2171      626C6554 
 2171      78496E74 
 2171      00
 2172              	.LASF53:
 2173 016f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2173      4320342E 
 2173      392E3320 
 2173      32303135 
 2173      30333033 
 2174 01a2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2174      20726576 
 2174      6973696F 
 2174      6E203232 
 2174      31323230 
 2175 01d5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2175      66756E63 
 2175      74696F6E 
 2175      2D736563 
 2175      74696F6E 
 2176              	.LASF10:
 2177 01fd 646F7562 		.ascii	"double\000"
 2177      6C6500
 2178              	.LASF26:
 2179 0204 696E7453 		.ascii	"intSrc\000"
 2179      726300
 2180              	.LASF41:
 2181 020b 53504953 		.ascii	"SPIS_PutArray\000"
 2181      5F507574 
 2181      41727261 
 2181      7900
 2182              	.LASF17:
 2183 0219 53504953 		.ascii	"SPIS_Enable\000"
 2183      5F456E61 
 2183      626C6500 
 2184              	.LASF48:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 63


 2185 0225 53504953 		.ascii	"SPIS_SetInterruptMode\000"
 2185      5F536574 
 2185      496E7465 
 2185      72727570 
 2185      744D6F64 
 2186              	.LASF50:
 2187 023b 53504953 		.ascii	"SPIS_initVar\000"
 2187      5F696E69 
 2187      74566172 
 2187      00
 2188              	.LASF8:
 2189 0248 756E7369 		.ascii	"unsigned int\000"
 2189      676E6564 
 2189      20696E74 
 2189      00
 2190              	.LASF7:
 2191 0255 6C6F6E67 		.ascii	"long long unsigned int\000"
 2191      206C6F6E 
 2191      6720756E 
 2191      7369676E 
 2191      65642069 
 2192              	.LASF15:
 2193 026c 53504953 		.ascii	"SPIS_Init\000"
 2193      5F496E69 
 2193      7400
 2194              	.LASF22:
 2195 0276 53504953 		.ascii	"SPIS_DisableTxInt\000"
 2195      5F446973 
 2195      61626C65 
 2195      5478496E 
 2195      7400
 2196              	.LASF44:
 2197 0288 62756649 		.ascii	"bufIndex\000"
 2197      6E646578 
 2197      00
 2198              	.LASF31:
 2199 0291 74784461 		.ascii	"txData\000"
 2199      746100
 2200              	.LASF55:
 2201 0298 433A5C55 		.ascii	"C:\\Users\\jthem\\Documents\\PSoC Creator\\PWMExamp"
 2201      73657273 
 2201      5C6A7468 
 2201      656D5C44 
 2201      6F63756D 
 2202 02c6 6C653031 		.ascii	"le01\\SPIS_Example01.cydsn\000"
 2202      5C535049 
 2202      535F4578 
 2202      616D706C 
 2202      6530312E 
 2203              	.LASF14:
 2204 02e0 73697A65 		.ascii	"sizetype\000"
 2204      74797065 
 2204      00
 2205              	.LASF6:
 2206 02e9 6C6F6E67 		.ascii	"long long int\000"
 2206      206C6F6E 
 2206      6720696E 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 64


 2206      7400
 2207              	.LASF29:
 2208 02f7 53504953 		.ascii	"SPIS_ReadRxStatus\000"
 2208      5F526561 
 2208      64527853 
 2208      74617475 
 2208      7300
 2209              	.LASF47:
 2210 0309 53504953 		.ascii	"SPIS_DisableInt\000"
 2210      5F446973 
 2210      61626C65 
 2210      496E7400 
 2211              	.LASF11:
 2212 0319 63686172 		.ascii	"char\000"
 2212      00
 2213              	.LASF2:
 2214 031e 73686F72 		.ascii	"short int\000"
 2214      7420696E 
 2214      7400
 2215              	.LASF46:
 2216 0328 53504953 		.ascii	"SPIS_EnableInt\000"
 2216      5F456E61 
 2216      626C6549 
 2216      6E7400
 2217              	.LASF42:
 2218 0337 62756666 		.ascii	"buffer\000"
 2218      657200
 2219              	.LASF49:
 2220 033e 53504953 		.ascii	"SPIS_ReadStatus\000"
 2220      5F526561 
 2220      64537461 
 2220      74757300 
 2221              	.LASF4:
 2222 034e 6C6F6E67 		.ascii	"long int\000"
 2222      20696E74 
 2222      00
 2223              	.LASF27:
 2224 0357 746D7053 		.ascii	"tmpStatus\000"
 2224      74617475 
 2224      7300
 2225              	.LASF45:
 2226 0361 53504953 		.ascii	"SPIS_ClearFIFO\000"
 2226      5F436C65 
 2226      61724649 
 2226      464F00
 2227              	.LASF0:
 2228 0370 7369676E 		.ascii	"signed char\000"
 2228      65642063 
 2228      68617200 
 2229              	.LASF3:
 2230 037c 73686F72 		.ascii	"short unsigned int\000"
 2230      7420756E 
 2230      7369676E 
 2230      65642069 
 2230      6E7400
 2231              	.LASF18:
 2232 038f 53504953 		.ascii	"SPIS_Stop\000"
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccQ0cj3v.s 			page 65


 2232      5F53746F 
 2232      7000
 2233              	.LASF24:
 2234 0399 53504953 		.ascii	"SPIS_SetTxInterruptMode\000"
 2234      5F536574 
 2234      5478496E 
 2234      74657272 
 2234      7570744D 
 2235              	.LASF33:
 2236 03b1 74784461 		.ascii	"txDataByte\000"
 2236      74614279 
 2236      746500
 2237              	.LASF25:
 2238 03bc 53504953 		.ascii	"SPIS_SetRxInterruptMode\000"
 2238      5F536574 
 2238      5278496E 
 2238      74657272 
 2238      7570744D 
 2239              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
